  //TODO: check string refs


// Tightly based on Nythrun's ~fj_spl_itm_reindex~ patch 
DEFINE_PATCH_FUNCTION ~FJ_SPL_ITM_REINDEX~ BEGIN
  PATCH_IF !(~%SOURCE_FILE%~ STRING_MATCHES_REGEXP ~^.+\.spl~) BEGIN
    hs = 0x28
    WRITE_LONG 0xc ~-1~   //Identified name
    WRITE_LONG 0x54 ~-1~  //Identified description
    PATCH_FOR_EACH tz IN 0x44 0x48 0x58 0x5c BEGIN
      WRITE_LONG tz 0
    END
  END ELSE PATCH_IF !(~%SOURCE_FILE%~ STRING_MATCHES_REGEXP ~^.+\.itm~) BEGIN
    hs = 0x38
  END
  READ_LONG 0x64 hf     //Extended header offset
  READ_SHORT 0x68 hc    //Extended header count
  READ_LONG 0x6a fb     //Feature block table offset
  READ_SHORT 0x70 fc    //Feature block count
  PATCH_IF ((hf > fb) AND (hc > 0)) BEGIN
    READ_ASCII hf ~eh~ ELSE ~fail~ (hs * hc)
    PATCH_IF (~%eh%~ STRING_EQUAL ~fail~) BEGIN
      WHILE ((~%eh%~ STRING_EQUAL ~fail~) AND (hc > 0)) BEGIN
        READ_ASCII hf ~eh~ ELSE ~fail~ (hs * hc)
        hc -= 1
      END
    END
    DELETE_BYTES hf (hs * hc)
    hf = 0x72
    WRITE_LONG 0x64 hf
    WRITE_SHORT 0x68 hc
    fb = (0x72 + (hs * hc))
    WRITE_LONG 0x6a fb
    PATCH_IF !(~%eh%~ STRING_EQUAL ~fail~) BEGIN
      INSERT_BYTES hf (hs * hc)
      WRITE_ASCIIE hf ~%eh%~
    END
  END ELSE PATCH_IF ((hf != 0x72) AND (hc = 0)) BEGIN
    hf = 0x72
    WRITE_LONG 0x64 hf
  END
  FOR (i1 = 0; i1 < (hs * hc); i1 += hs) BEGIN
    WRITE_SHORT (hf + i1 + 0x20) fc
    READ_SHORT (hf + i1 + 0x1e) cx
    fc += cx
  END
  PATCH_IF (SOURCE_SIZE > (0x72 + (hs * hc) + (0x30 * fc))) BEGIN
    DELETE_BYTES (0x72 + (hs * hc) + (0x30 * fc)) (SOURCE_SIZE - (0x72 + (hs * hc) + (0x30 * fc)))
  END
  // added by Ardanis
  WRITE_SHORT 0x6e 0
END


DEFINE_PATCH_FUNCTION STRING_TO_ARRAY
STR_VAR
  string = ""     // string with space separator
RET_ARRAY array
BEGIN
  CLEAR_ARRAY array
  SET i=0
  INNER_PATCH ~%string%~ BEGIN
    REPLACE_EVALUATE ~[^ %TAB%]+~ BEGIN
      SPRINT $array("%i%") "%MATCH0%"
      i+=1
    END ~%MATCH0%~
  END    
END


// Add an effect to a CRE, ITM, or SPL
DEFINE_PATCH_FUNCTION ADD_EFFECT_CRE_ITM_SPL
INT_VAR
  opcode=0
  parameter1=0
  parameter2=0
  parameter3=0
  parameter4=0
  power=0           // only apply to a SPL file
  resist_dispel=0   // only apply to a SPL file
  duration=0        // only apply to a SPL file
STR_VAR
  resource=""
BEGIN
  PATCH_MATCH "%SOURCE_EXT%" WITH
    ~CRE~ BEGIN
      LPF ADD_CRE_EFFECT INT_VAR target=1 timing=9 opcode parameter1 parameter2 parameter3 parameter4 STR_VAR resource END  
    END
    ~ITM~ BEGIN
      LPF ADD_ITEM_EQEFFECT INT_VAR target=1 timing=2 opcode parameter1 parameter2 parameter3 parameter4 STR_VAR resource END  
    END
    ~SPL~ BEGIN
      LPF ADD_SPELL_EFFECT INT_VAR target=2 opcode parameter1 parameter2 parameter3 parameter4 power resist_dispel duration STR_VAR resource END  
    END
  DEFAULT END
END


// Add an immunity to a CRE, ITM, or SPL
DEFINE_PATCH_FUNCTION ADD_IMMUNITY_CRE_ITM_SPL
INT_VAR
  displaySpellIneffective=0 // only apply to "Protection from Spell" effect
  power=0                   // only apply to "Protection from Spell" effect on a SPL file
  resist_dispel=0           // only apply to "Protection from Spell" effect on a SPL file
  duration=0                // only apply to "Protection from Spell" effect on a SPL file
STR_VAR
  effects = ""        // string value with space separator
  prevent_icons = ""  // string value with space separator
  display_icons = ""  // string value with space separator
  strings = ""        // string value with space separator
  animations = ""     // string value with space separator
  spells = ""         // string array
BEGIN
  LPF STRING_TO_ARRAY STR_VAR string=EVALUATE_BUFFER "%effects%" RET_ARRAY array1=array END
  PATCH_PHP_EACH array1 AS _ => v BEGIN
    // Immunity to effect
    LPF ADD_EFFECT_CRE_ITM_SPL INT_VAR opcode=101 parameter2=v power resist_dispel duration END  
  END
  LPF STRING_TO_ARRAY STR_VAR string=EVALUATE_BUFFER "%prevent_icons%" RET_ARRAY array2=array END
  PATCH_PHP_EACH array2 AS _ => v BEGIN
    // Prevent portrait icon
    LPF ADD_EFFECT_CRE_ITM_SPL INT_VAR opcode=169 parameter2=v power resist_dispel duration END  
  END
  LPF STRING_TO_ARRAY STR_VAR string=EVALUATE_BUFFER "%display_icons%" RET_ARRAY array3=array END
  PATCH_PHP_EACH array3 AS _ => v BEGIN
    // Display portrait icon
    LPF ADD_EFFECT_CRE_ITM_SPL INT_VAR opcode=142 parameter2=v power resist_dispel duration END  
  END
  LPF STRING_TO_ARRAY STR_VAR string=EVALUATE_BUFFER "%strings%" RET_ARRAY array4=array END
  PATCH_PHP_EACH array4 AS _ => v BEGIN
    // Disable display string
    LPF ADD_EFFECT_CRE_ITM_SPL INT_VAR opcode=267 parameter1=v power resist_dispel duration END  
  END
  LPF STRING_TO_ARRAY STR_VAR string=EVALUATE_BUFFER "%animations%" RET_ARRAY array5=array END
  PATCH_PHP_EACH array5 AS _ => v BEGIN
    // Protection from Specific Animation
    LPF ADD_CRE_EFFECT INT_VAR opcode=296 STR_VAR resource=EVALUATE_BUFFER "%v%" END
  END
  PATCH_PHP_EACH EVAL ~%spells%~ AS _ => v BEGIN
    PATCH_IF FILE_EXISTS_IN_GAME ~%v%.spl~ BEGIN
      // Protection from Spell
      SET parameter1 = displaySpellIneffective ? 4742 : 0
      LPF ADD_EFFECT_CRE_ITM_SPL INT_VAR opcode=206 
                                         parameter1
                                         power 
                                         resist_dispel 
                                         duration
                                 STR_VAR resource=EVALUATE_BUFFER "%v%" 
      END
    END
  END
END


// Adds an opcode 206 (protection from spell) with the resref f_Spell to the extended header of the source spell or item,
// if an effect of type f_Condition is found on the header
// the string which is displayed when the spell fails can be set via f_Strref which defaults to 0 (meaning no message)
DEFINE_PATCH_FUNCTION add_conditional_immunity 
INT_VAR 
  f_Condition = 999 
  f_Strref = 0 
BEGIN
  PATCH_IF SOURCE_SIZE > 0x71 BEGIN
    READ_LONG  0x64 ao
    READ_LONG  0x6a eo
    READ_SHORT 0x70 ei
    al = "%SOURCE_EXT%" STRING_EQUAL_CASE spl ? 0x28 : 0x38
    FOR (i=0;i<SHORT_AT 0x68;++i) BEGIN
      WRITE_SHORT ao + al*i + 0x20 ei
      READ_SHORT  ao + al*i + 0x1e ne
      FOR (j=0;j<ne;++j) BEGIN
        READ_SHORT eo + 0x30*(ei + j) type
        PATCH_IF type = f_Condition BEGIN
          READ_ASCII   eo + 0x30*(ei + j) copy (0x30)
          INSERT_BYTES eo + 0x30*(ei + j) 0x30
            WRITE_ASCIIE eo + 0x30*(ei + j)        "%copy%"
            WRITE_SHORT  eo + 0x30*(ei + j)        206 //immunity to spell
            WRITE_LONG   eo + 0x30*(ei + j) + 0x4  "%f_Strref%"
            WRITE_ASCIIE eo + 0x30*(ei + j) + 0x14 "%f_Spell%" #8
          ++ne
          j=ne
        END
      END
      WRITE_SHORT ao + al*i + 0x1e ne
      ei+=ne
    END
  END
END


// Deletes all effects and extended headers from the source item or spell and inserts a new extended header of type f_Type (defaults to f_Type = 1), provided f_Type >= 0
// if the source file is an item file and f_Type = 1, the function launches an auxilliary function to set up the basics of the melee header
// FAILs if the source file is too small or doesn't have an ITM or SPL file extension
DEFINE_PATCH_FUNCTION prep_itm_spl INT_VAR f_Type = 1 BEGIN
  PATCH_IF SOURCE_SIZE > 0x71 AND ("%SOURCE_EXT%" STRING_EQUAL_CASE itm OR "%SOURCE_EXT%" STRING_EQUAL_CASE spl) BEGIN
    al = "%SOURCE_EXT%" STRING_EQUAL_CASE spl ? 0x28 : 0x38
    READ_LONG  0x64 ao
    READ_SHORT 0x68 na
    READ_LONG  0x6a eo
    FOR (i = na - 1; i >= 0; --i) BEGIN
      READ_SHORT ao + al*i + 0x1e ne
      READ_SHORT ao + al*i + 0x20 ei
      FOR (j = ne - 1; j >= 0; --j) BEGIN
        DELETE_BYTES eo + 0x30*(ei + j) 0x30
      END
      DELETE_BYTES ao + al*i al
      --na
      eo -= al
    END
    READ_SHORT 0x70 ne
    FOR (i=0;i<ne;++i) BEGIN
      DELETE_BYTES eo + 0x30*i 0x30
      --ne
      --i
    END
    WRITE_SHORT 0x70 ne
    PATCH_IF f_Type >= 0 BEGIN
      INSERT_BYTES ao al
      WRITE_BYTE ao f_Type
      ++na
      eo+=al
    END
    WRITE_SHORT 0x68 na
    WRITE_LONG  0x6a eo
    READ_ASCII 0x3a f_Icon
    PATCH_IF f_Type = 1 AND al = 0x38 BEGIN
      LPF configure_weapon_header STR_VAR f_Icon END
    END
  END ELSE BEGIN
    PATCH_FAIL ~File %SOURCE_FILE% is below required size or of unrecognised type.~
  END
END


DEFINE_PATCH_FUNCTION configure_header
INT_VAR
  f_Header = "-1"
  f_TargetType = "-1"
  f_Type = "-1"
  f_Identify = "-1"
  f_Slot = "-1"
  f_Target = "-1"
  f_Range = "-1"
  f_Launcher = "-1"
  f_Speed = "-1"
  f_ToHit = "-1"
  f_Damage = "-1"
  f_NumDice = "-1"
  f_DieSize = "-1"
  f_DamageType = "-1"
  f_Flags = "-1"
  f_Charges = "-1"
  f_Drained = "-1"
  f_Projectile = "-1"
  f_Overhand = "-1"
  f_Backhand = "-1"
  f_Thrust = "-1"
  f_Arrow = "-1"
  f_Bolt = "-1"
  f_Bullet = "-1"
STR_VAR
  f_Icon = flEmpty
BEGIN
  READ_LONG  0x64 ao
  FOR (i=0;i<SHORT_AT 0x68;++i) BEGIN
    READ_BYTE ao + 0x38*i type
    PATCH_IF type = f_TargetType OR i = f_Header OR (f_Header < 0 AND f_TargetType < 0) BEGIN
      WRITE_BYTE   ao + 0x38*i        f_Type < 0 ? THIS : f_Type
      WRITE_BYTE   ao + 0x38*i + 0x2  f_Slot < 0 ? THIS : f_Slot
      PATCH_IF "%f_Icon%" STRING_COMPARE flEmpty BEGIN
        WRITE_ASCIIE ao + 0x38*i + 0x4  "%f_Icon%"
      END
      WRITE_BYTE   ao + 0x38*i + 0xc  f_Target < 0 ? THIS : f_Target
      WRITE_SHORT  ao + 0x38*i + 0xe  f_Range < 0 ? THIS : f_Range
      WRITE_BYTE   ao + 0x38*i + 0x12 f_Speed < 0 ? THIS : f_Speed
      WRITE_SHORT  ao + 0x38*i + 0x14 f_ToHit < 0 ? THIS : f_ToHit
      WRITE_BYTE   ao + 0x38*i + 0x16 f_DieSize < 0 ? THIS : f_DieSize
      WRITE_BYTE   ao + 0x38*i + 0x18 f_NumDice < 0 ? THIS : f_NumDice
      WRITE_SHORT  ao + 0x38*i + 0x1a f_Damage < 0 ? THIS : f_Damage
      WRITE_SHORT  ao + 0x38*i + 0x1c f_DamageType < 0 ? THIS : f_DamageType
      WRITE_SHORT  ao + 0x38*i + 0x22 f_Charges < 0 ? THIS : f_Charges
      WRITE_SHORT  ao + 0x38*i + 0x24 f_Drained < 0 ? THIS : f_Drained
      WRITE_LONG   ao + 0x38*i + 0x26 f_Flags < 0 ? THIS : f_Flags
      WRITE_SHORT  ao + 0x38*i + 0x2a f_Projectile < 0 ? THIS : f_Projectile
      WRITE_SHORT  ao + 0x38*i + 0x2c f_Overhand < 0 ? THIS : f_Overhand
      WRITE_SHORT  ao + 0x38*i + 0x2e f_Backhand < 0 ? THIS : f_Backhand
      WRITE_SHORT  ao + 0x38*i + 0x30 f_Thrust < 0 ? THIS : f_Thrust
      WRITE_SHORT  ao + 0x38*i + 0x32 f_Arrow < 0 ? THIS : f_Arrow
      WRITE_SHORT  ao + 0x38*i + 0x34 f_Bolt < 0 ? THIS : f_Bolt
      WRITE_SHORT  ao + 0x38*i + 0x36 f_Bullet < 0 ? THIS : f_Bullet
    END
  END
END


// Writes to the more and less common fields of the item melee header
DEFINE_PATCH_FUNCTION configure_weapon_header
INT_VAR
  f_Slot = 1
  f_Target = 1
  f_Range = 1
  f_Speed = 0
  f_ToHit = 0
  f_Damage = 0
  f_NumDice = 0
  f_DieSize = 0
  f_DamageType = 0
  f_Flags = 1
  f_Charges = 0
  f_Drained = 1
  f_Projectile = 1
  f_Overhand = 34
  f_Backhand = 33
  f_Thrust = 33
  f_Arrow = 0
  f_Bolt = 0
  f_Bullet = 0
STR_VAR
  f_Icon = ~~
BEGIN
  LPF configure_header
    INT_VAR
      f_TargetType = 1
      f_Slot
      f_Target
      f_Range
      f_Speed
      f_ToHit
      f_Damage
      f_NumDice
      f_DieSize
      f_DamageType
      f_Flags
      f_Charges
      f_Drained
      f_Projectile
      f_Overhand
      f_Backhand
      f_Thrust
      f_Arrow
      f_Bolt
      f_Bullet
    STR_VAR
      f_Icon
  END
END


DEFINE_ACTION_FUNCTION get_from_file_by_row_count INT_VAR f_Label_col = 0 STR_VAR f_Label = "" f_File = "" RET f_Value BEGIN
  ACTION_IF "%f_Label%" STR_CMP "" AND "%f_File%" STR_CMP "" BEGIN
    COPY_EXISTING "%f_File%" override
      READ_2DA_ENTRIES_NOW buff 2
      FOR (i = 0; i < buff; ++i) BEGIN
        READ_2DA_ENTRY_FORMER buff i f_Label_col label
        PATCH_IF "%label%" STRING_EQUAL_CASE "%f_Label%" BEGIN
          f_Value = i - 1 // -1 because row 0 is (2DA|IDS) V1.0
          i = buff
        END
      END
    BUT_ONLY
  END
END


DEFINE_ACTION_FUNCTION get_from_file_by_assoc INT_VAR f_Label_col = 0 f_Value_col = 1 STR_VAR f_Label = "" f_File = "" RET f_Value BEGIN
  ACTION_IF "%f_Label%" STR_CMP "" AND "%f_File%" STR_CMP "" BEGIN
    COPY_EXISTING "%f_File%" override
      READ_2DA_ENTRIES_NOW buff 2
      FOR (i = buff - 1; i >= 0; --i) BEGIN
        READ_2DA_ENTRY_FORMER buff i f_Label_col label
        PATCH_IF "%label%" STRING_EQUAL_CASE "%f_Label%" BEGIN
          READ_2DA_ENTRY_FORMER buff i f_Value_col f_Value
          i = "-1"
        END
      END
    BUT_ONLY
  END
END


DEFINE_ACTION_FUNCTION get_sectype STR_VAR f_Label = "" RET f_Value BEGIN
  LAF get_from_file_by_row_count STR_VAR f_Label f_File = msectype.2da RET f_Value = f_Value END
END


DEFINE_ACTION_FUNCTION get_projectile STR_VAR f_Label = "" RET f_Value BEGIN
  LAF get_from_file_by_assoc INT_VAR f_Label_col = 1 f_Value_col = 0 STR_VAR f_Label f_File = missile.ids RET f_Value = f_Value END
END


// Creates copies of the first header up to f_FillLimit (default is 20 headers)
DEFINE_PATCH_FUNCTION fill_headers INT_VAR f_FillLimit = 20 BEGIN
  al = "%SOURCE_EXT%" STRING_EQUAL_CASE spl ? 0x28 : 0x38
  READ_LONG   0x64 ao
  READ_SHORT  0x68 na
  READ_LONG   0x6a eo
  READ_ASCII  ao ab_copy (al)
  number = f_FillLimit - na
  FOR (i=0;i<number;++i) BEGIN
    INSERT_BYTES   ao + al*na al
      WRITE_ASCIIE ao + al*na "%ab_copy%"
    ++na
    eo += al
  END
  WRITE_SHORT 0x68 na
  WRITE_LONG  0x6a eo
END


// Writes to the more and less usual fields of the spell header (count starts at 1)
// writes to all headers if f_Header < 0 (default)
// Minimum level defaults to header number (starting from 1)
DEFINE_PATCH_FUNCTION configure_spell_header 
INT_VAR
  f_Header = "-1"
  f_Type = 1
  f_Location = 2
  f_Target = 1
  f_Range = 30
  f_Level = "-1"
  f_CastTime = 1
  f_Projectile = 1
STR_VAR
  f_Icon = ~~
BEGIN
  READ_LONG  0x64 ao
  READ_SHORT 0x68 na
  FOR (i=0;i<na;++i) BEGIN
    PATCH_IF (i+1) = f_Header OR f_Header < 0 BEGIN
     WRITE_ASCIIE ao + 0x28*i + 0x4  "%f_Icon%" #8
      WRITE_BYTE  ao + 0x28*i + 0x0  f_Type
      WRITE_SHORT ao + 0x28*i + 0x2  f_Location
      WRITE_BYTE  ao + 0x28*i + 0xc  f_Target
      WRITE_SHORT ao + 0x28*i + 0xe  f_Range
      WRITE_SHORT ao + 0x28*i + 0x10 f_Level < 0 ? i + 1 : f_Level
      WRITE_SHORT ao + 0x28*i + 0x12 f_CastTime
      WRITE_SHORT ao + 0x28*i + 0x26 f_Projectile
    END
  END
END


// Called from integrate_sectypes
DEFINE_PATCH_FUNCTION integrate_sectypes_inner BEGIN
  READ_LONG  0x64 ao
  READ_SHORT 0x68 na
  READ_LONG  0x6a eo
  READ_SHORT 0x6e ei1
  READ_SHORT 0x70 gne

  PATCH_IF "%SOURCE_EXT%" STRING_EQUAL_CASE itm BEGIN
    FOR (i=0;i<gne;++i) BEGIN
      READ_SHORT eo + 0x30*(ei1 + i)       type ELSE 999
      READ_LONG  eo + 0x30*(ei1 + i) + 0x8 p2   ELSE 999

      //This works as long as we always insert the new effects in front of the ones that trigger the insertion of a new effect
      PATCH_IF type = 206 BEGIN
        READ_ASCII eo + 0x30 * (ei1 + i) + 0x14 rr ELSE nil
        TO_LOWER rr
        SET $onequip_immunity("%rr%") = 1
      END

      //On-equip immunity
      PATCH_IF type = 101 AND VARIABLE_IS_SET $f_ImmunitySecType("%p2%") BEGIN
        PHP_EACH f_AddSecType AS file => SecTypeToAdd BEGIN
          PATCH_IF "%file%" STRING_MATCHES_REGEXP ".*\.spl$" = 0 AND SecTypeToAdd = $f_ImmunitySecType("%p2%") BEGIN
            INNER_PATCH "%file%" BEGIN
              READ_ASCII 0 spell (STRING_LENGTH "%file%" - 4)
            END
            TO_LOWER spell
            PATCH_IF !VARIABLE_IS_SET $onequip_immunity("%spell%") BEGIN
              INSERT_BYTES   eo + 0x30 * (ei1 + i)        0x30
                WRITE_SHORT  eo + 0x30 * (ei1 + i)        206 //protection from spell
                WRITE_BYTE   eo + 0x30 * (ei1 + i) + 0x2  1
                WRITE_BYTE   eo + 0x30 * (ei1 + i) + 0xc  2
                WRITE_BYTE   eo + 0x30 * (ei1 + i) + 0x12 100
                WRITE_ASCIIE eo + 0x30 * (ei1 + i) + 0x14 "%spell%" #8
              ++i
              ++gne
            END
          END
        END
      END
    END
  END

  WRITE_SHORT 0x70 gne
  ei = gne = 0 ? 0 : ei1 + gne //Some mod files have illegal values for ei1, but the engine disregards the illegal value because gne is 0; we do the same
  ne = 0
  al = "%SOURCE_EXT%" STRING_EQUAL_CASE itm ? 0x38 : 0x28

  //Check for effects to remove e.g. fear or disease and effects that grant immunity to e.g. fear or disease
  FOR (i=0;i<na AND ao + na*al < SOURCE_SIZE;++i) BEGIN
    ei += ne
    WRITE_SHORT ao + al*i + 0x20 ei
    READ_SHORT  ao + al*i + 0x1e ne
    FOR (j=0;j<ne;++j) BEGIN
      READ_SHORT eo + 0x30*(ei + j)        type   ELSE 999
      READ_BYTE  eo + 0x30*(ei + j) + 0x2  target ELSE 0
      READ_BYTE  eo + 0x30*(ei + j) + 0x3  power  ELSE 0
      READ_LONG  eo + 0x30*(ei + j) + 0x4  p1     ELSE 999
      READ_LONG  eo + 0x30*(ei + j) + 0x8  p2     ELSE 999
      READ_BYTE  eo + 0x30*(ei + j) + 0xc  timing ELSE 0
      READ_BYTE  eo + 0x30*(ei + j) + 0xd  dr     ELSE 0
      READ_LONG  eo + 0x30*(ei + j) + 0xe  time   ELSE 0

      //This works as long as we always insert the new effects in front of the ones that trigger the insertion of the new effect
      PATCH_IF type = 221 BEGIN
        SET $extended_sectype_immunity("%i%" "%p2%") = 1
      END
      PATCH_IF type = 206 BEGIN
        READ_ASCII eo + 0x30 * (ei + j) + 0x14 rr ELSE nil
        TO_LOWER rr
        SET $extended_spell_immunity("%i%" "%rr%") = 1
      END

      PATCH_IF VARIABLE_IS_SET $f_RemoveSecType("%type%") BEGIN
        check = $f_RemoveSecType("%type%")
        PATCH_IF !VARIABLE_IS_SET $extended_sectype_immunity("%i%" "%check%") BEGIN
          INSERT_BYTES  eo + 0x30*(ei + j)        0x30
            WRITE_SHORT eo + 0x30*(ei + j)        221 //remove sec type
            WRITE_BYTE  eo + 0x30*(ei + j) + 0x2  target
            WRITE_BYTE  eo + 0x30*(ei + j) + 0x3  power
            WRITE_LONG  eo + 0x30*(ei + j) + 0x4  9
            WRITE_LONG  eo + 0x30*(ei + j) + 0x8  $f_RemoveSecType("%type%")
            WRITE_BYTE  eo + 0x30*(ei + j) + 0xc  1
            WRITE_BYTE  eo + 0x30*(ei + j) + 0x12 100
          ++ne
          ++j
        END
      END

      PATCH_IF type = 101 AND VARIABLE_IS_SET $f_ImmunitySecType("%p2%") BEGIN
        PHP_EACH f_AddSecType AS file => SecTypeToAdd BEGIN
          PATCH_IF "%file%" STRING_MATCHES_REGEXP ".+\.spl$" = 0 AND SecTypeToAdd = $f_ImmunitySecType("%p2%") BEGIN
            INNER_PATCH "%file%" BEGIN
              READ_ASCII 0 spell (STRING_LENGTH "%file%" - 4)
            END
            TO_LOWER spell
            PATCH_IF !VARIABLE_IS_SET $extended_spell_immunity("%i%" "%spell%") BEGIN
              INSERT_BYTES   eo + 0x30*(ei + j)        0x30
                WRITE_SHORT  eo + 0x30*(ei + j)        206 //protection from spell
                WRITE_BYTE   eo + 0x30*(ei + j) + 0x2  target
                WRITE_BYTE   eo + 0x30*(ei + j) + 0x3  power
                WRITE_BYTE   eo + 0x30*(ei + j) + 0xc  timing
                WRITE_BYTE   eo + 0x30*(ei + j) + 0xd  dr
                WRITE_LONG   eo + 0x30*(ei + j) + 0xe  time
                WRITE_BYTE   eo + 0x30*(ei + j) + 0x12 100
                WRITE_ASCIIE eo + 0x30*(ei + j) + 0x14 "%spell%" #8
              ++ne
              ++j
            END
          END
        END
      END

    END
    WRITE_SHORT ao + al*i + 0x1e ne
  END
END


DEFINE_PATCH_FUNCTION integrate_sectype_cre BEGIN
  READ_LONG 0x2c4 eo

  // First, check out what's already there
  FOR (i = 0; i < LONG_AT 0x2c8; ++i) BEGIN
    p = eo + 0x108 * i + 0x8
    READ_LONG p fx ELSE 999
    PATCH_IF fx = 206 BEGIN // Protecton from spell
      READ_ASCII p + 0x14 rr ELSE nil
      TO_LOWER rr
      SET $extended_spell_immunity("%rr%") = 1
    END
    PATCH_IF fx = 101 BEGIN // Immunity to effect
      READ_LONG p + 0x10 p2 ELSE 999
      SET $immunities("%p2%") = 1
    END
  END

  // Then we see what, if anything, we need to do
  PHP_EACH immunities AS fx => i BEGIN
    PATCH_IF VARIABLE_IS_SET $f_ImmunitySecType("%fx%") BEGIN
      PHP_EACH f_AddSecType AS file => SecTypeToAdd BEGIN
        PATCH_IF "%file%" STRING_MATCHES_REGEXP ".+\.spl$" = 0 AND SecTypeToAdd = $f_ImmunitySecType("%fx%") BEGIN
          INNER_PATCH "%file%" BEGIN
            READ_ASCII 0 spell (STRING_LENGTH "%file%" - 4)
          END
          TO_LOWER spell
          PATCH_IF !VARIABLE_IS_SET $extended_spell_immunity("%spell%") BEGIN
            LPF ADD_CRE_EFFECT
              INT_VAR
                opcode = 206
                target = 1
                timing = 9
              STR_VAR
                resource = EVAL "%spell%"
            END
          END
        END
      END
    END
  END
END


//Add the SecTypes to items and spells that should grant immunity or be able to remove them
//Needs the three arrays:
//f_AddSecType(file) = SecType -> Associates a SecType with a specific file. Items and spells that grant immunity to e.g. disease will grant immunity to this particular file (spell) as well. Creatures with immunity effects will also be affected.
//f_ImmunitySecType(opcode) = SecType -> opcode is the opcode used to determine if a spell/item should grant immunity to the file (spell).
//f_RemoveSecType(opcode) = Secype -> opcode is the opcode used to determine if a spell/item should cure the secondary type.
//E.g. is your secondary type covers disease you would have:
//f_AddSecType(YourDisease-causingSpell.spl) = YourDiseaseSecType
//f_ImmunitySecType(78) = YourDiseaseSecType
//f_RemoveSecType(79) = YourDiseaseSecType
DEFINE_ACTION_FUNCTION integrate_sectypes BEGIN
  COPY_EXISTING_REGEXP GLOB ~.+\.\(spl\|itm\)$~ override
    PATCH_IF SOURCE_SIZE > 0x71 BEGIN
      LPF integrate_sectypes_inner END
    END
  BUT_ONLY
  COPY_EXISTING_REGEXP GLOB ~.+\.cre$~ override
    PATCH_IF SOURCE_SIZE > 0x2d3 BEGIN
      LPF integrate_sectype_cre END
    END
  BUT_ONLY
END


// The Shield spell and amulet should protect from RR/aTweaks' cloned Magic Missile
DEFINE_ACTION_FUNCTION magic_missile_shield BEGIN
  ACTION_IF !FILE_CONTAINS_EVALUATED (spwi114.spl "RR#WI112") BEGIN
  COPY_EXISTING ~spwi114.spl~ ~override~ // Shield (WIZARD_SHIELD)
    READ_LONG  0x64 "abil_off" ELSE 0
    READ_SHORT 0x68 "abil_num" ELSE 0
    READ_LONG  0x6a "fx_off"   ELSE 0
    SET "delta" = 0
    FOR (index = 0 ; index < abil_num ; index = index + 1) BEGIN
      READ_SHORT ("%abil_off%" + 0x1e + (0x28 * "%index%")) "abil_fx_num"
      READ_SHORT ("%abil_off%" + 0x20 + (0x28 * "%index%")) "abil_fx_idx"
      SET "abil_fx_idx" = ("%abil_fx_idx%" + "%delta%")
      WRITE_SHORT ("%abil_off%" + 0x20 + (0x28 * "%index%")) "%abil_fx_idx%"
      FOR (index2 = 0 ; index2 < abil_fx_num ; index2 = index2 + 1) BEGIN
      READ_SHORT ("%fx_off%" +        (0x30 * ("%abil_fx_idx%" + "%index2%"))) "opcode"
      READ_ASCII ("%fx_off%" +        (0x30 * ("%abil_fx_idx%" + "%index2%"))) "resref"
      READ_ASCII ("%fx_off%" + 0x14 + (0x30 * ("%abil_fx_idx%" + "%index2%"))) "resref"
        PATCH_IF (("%opcode%" = "206") AND ("%resref%" STRING_EQUAL_CASE ~SPWI112~)) BEGIN           // effect #206: Protection from Spell
          READ_ASCII ("%fx_off%" +        (("%abil_fx_idx%" + "%index2%") * 0x30)) "clone_fx" (0x30) // clone effect
          SET "index2"= "%abil_fx_num%" // kills loop
          INSERT_BYTES            ("%fx_off%" +        ("%abil_fx_idx%" * 0x30)) 0x30                // new effect
            WRITE_EVALUATED_ASCII ("%fx_off%" +        ("%abil_fx_idx%" * 0x30)) "%clone_fx%"        // cloned effect
            WRITE_ASCII           ("%fx_off%" + 0x14 + ("%abil_fx_idx%" * 0x30)) "RR#WI112" #8       // resref (RR/aTweaks cloned Magic Missile)
          SET "delta" = "%delta%" + 1
          WRITE_SHORT ("%abil_off%" + 0x1e + (0x28 * "%index%")) ("%abil_fx_num%" + 1)
        END
      END
    END
  BUT_ONLY_IF_IT_CHANGES

  COPY_EXISTING ~amul15.itm~   ~override~ // Shield Amulet
    READ_LONG  0x64 "abil_off" ELSE 0
    READ_SHORT 0x68 "abil_num" ELSE 0
    READ_LONG  0x6a "fx_off"   ELSE 0
    SET "abil_length" = 0x38
    SET "fx_delta" = 0
    FOR (index = 0 ; index < abil_num ; index = index + 1) BEGIN // start iterating through abilities
      READ_SHORT  ("%abil_off%" + 0x1e + ("%abil_length%" * "%index%")) "abil_fx_num"
      READ_SHORT  ("%abil_off%" + 0x20 + ("%abil_length%" * "%index%")) "abil_fx_idx"
      SET "abil_fx_idx" = ("%abil_fx_idx%" + "%fx_delta%")
      WRITE_SHORT ("%abil_off%" + 0x20 + ("%abil_length%" * "%index%")) ("%abil_fx_idx%")
      FOR (index2 = 0 ; index2 < abil_fx_num ; index2 = index2 + 1) BEGIN
        READ_SHORT ("%fx_off%" +        (0x30 * ("%abil_fx_idx%" + "%index2%"))) "opcode"
        READ_LONG  ("%fx_off%" + 0x08 + (0x30 * ("%abil_fx_idx%" + "%index2%"))) "param2"
        PATCH_IF (("%opcode%" = "142") AND ("%param2%" = "15")) BEGIN // display shield icon
          READ_ASCII ("%fx_off%" +        (0x30 * ("%abil_fx_idx%" + "%index2%"))) "clone" (48) // clone fx
          INSERT_BYTES            ("%fx_off%" +        (0x30 * "%abil_fx_idx%")) 0x30           // insert new effect
            WRITE_EVALUATED_ASCII ("%fx_off%" +        (0x30 * "%abil_fx_idx%")) "%clone%"      // clones effect
            WRITE_SHORT           ("%fx_off%" +        (0x30 * "%abil_fx_idx%")) "206"          // effect #206: Protection from Spell
            WRITE_LONG            ("%fx_off%" + 0x04 + (0x30 * "%abil_fx_idx%")) "0"            // param1: 0 (empty strref)
            WRITE_LONG            ("%fx_off%" + 0x08 + (0x30 * "%abil_fx_idx%")) "0"            // param2: 0
            WRITE_ASCII           ("%fx_off%" + 0x14 + (0x30 * "%abil_fx_idx%")) ~RR#WI112~ #8  // resref (RR/aTweaks cloned Magic Missile)
          SET "fx_delta" = "%fx_delta%" + 1
          SET "abil_fx_num" = "%abil_fx_num%" + 1
          WRITE_SHORT  ("%abil_off%" + 0x1e + ("%abil_length%" * "%index%")) "%abil_fx_num%"
          SET "index2" = "%abil_fx_num%" // kills loop
        END
      END
    END
    BUT_ONLY_IF_IT_CHANGES

    COPY_EXISTING ~amul15.itm~   ~override~                                          // Shield Amulet - just in case the amulet was changed by a mod (IRR or item pack)
      LPF CLONE_EFFECT
        INT_VAR silent = 1 match_opcode = 206 
        STR_VAR match_resource = ~spwi112~ resource = ~RR#WI112~
      END

  END
END


// Adds immunity to the provided spell to blindness-causing spells and items
DEFINE_ACTION_FUNCTION add_blindness_immunity STR_VAR f_Spell = "" BEGIN
  // Begin: Add Spells from IWDification mod or stratagems mods
  ACTION_IF IDS_OF_SYMBOL("spell" "CLERIC_SUNSCORCH") > 0 BEGIN
    OUTER_SET code=IDS_OF_SYMBOL("spell" "CLERIC_SUNSCORCH")
    OUTER_SET code=code - 1000
    OUTER_SPRINT IWDsuns "SPpr%code%"
  END ELSE BEGIN
    OUTER_SPRINT IWDsuns ""
  END
  ACTION_IF IDS_OF_SYMBOL("spell" "CLERIC_CLOUD_OF_PESTILENCE") > 0 BEGIN
    OUTER_SET code=IDS_OF_SYMBOL("spell" "CLERIC_CLOUD_OF_PESTILENCE")
    OUTER_SET code=code - 1000
    OUTER_SPRINT IWDcldp "SPpr%code%"
  END ELSE BEGIN
    OUTER_SPRINT IWDcldp ""
  END 
  // End: Add Spells from IWDification mod or stratagems mods
  ACTION_FOR_EACH ~file~ IN
        ~spdr101.spl~
        ~spin595.spl~
        ~spin878.spl~
        ~spin893.spl~
        ~spin929.spl~
        ~spin931.spl~
        ~sppr704.spl~
        ~sppr707.spl~
        ~spwi106.spl~
        ~spwi118.spl~
        ~spwi224.spl~
        ~spwi714.spl~
        ~spwi815.spl~
        ~spwi958.spl~
        ~spwm178.spl~
        ~chalcy2.itm~
        ~gorwom4.itm~
          ~halb06.itm~
            ~sorb.itm~
          ~sw1h51.itm~
          ~wand19.itm~
			 ~%IWDsuns%.spl~	// Sunscorch (IWDification)
			 ~%IWDcldp%.spl~ // Cloud of Pestilence (IWDification)
  BEGIN
    ACTION_IF FILE_EXISTS_IN_GAME ~%file%~ BEGIN
      COPY_EXISTING ~%file%~ ~override~
        PATCH_IF (SOURCE_SIZE > 0x71) THEN BEGIN
          LPF add_conditional_immunity INT_VAR f_Condition = 74 STR_VAR f_Spell END
        END
      BUT_ONLY_IF_IT_CHANGES
    END
  END
END


// Magic Missile spell immunity
DEFINE_PATCH_FUNCTION magic_missile_immunity BEGIN
  PATCH_IF "%SOURCE_EXT%" STRING_EQUAL_CASE "SPL" BEGIN
    PATCH_FAIL ~Function magic_missile_immunity was not configured for spell, file: %SOURCE_RES%~
  END
  // Begin : Add Spells from IWDification mod or stratagems mods
  PATCH_IF IDS_OF_SYMBOL("spell" "WIZARD_MORDENKAINENS_FORCE_MISSILES") > 0 BEGIN
    SET code=IDS_OF_SYMBOL("spell" "WIZARD_MORDENKAINENS_FORCE_MISSILES")
    SET code=code - 2000
    SPRINT IWDmfm "SPwi%code%"
    SPRINT IWDmfmb "SPwi%code%B"
  END ELSE BEGIN
    SPRINT IWDmfm ""
    SPRINT IWDmfmb ""
  END
  // End : Add Spells from IWDification mod or stratagems mods
  DEFINE_ARRAY spells BEGIN  
    ~SPWI003~   // Magic Missile
    ~SPWI112~   // Magic Missile
    ~RR#WI112~  // aTweaks' Magic Missile
    ~%IWDmfm%~  // Mordenkainen's Force Missiles (IWDification)
    ~%IWDmfmb%~ // Mordenkainen's Force Missiles (IWDification)
  END
  LPF ADD_IMMUNITY_CRE_ITM_SPL STR_VAR spells END
END


// Fire spell immunities, area effect spell immunities (prevents friendly fire and such)
DEFINE_PATCH_FUNCTION fire_spell_immunities BEGIN
  PATCH_IF "%SOURCE_EXT%" STRING_EQUAL_CASE "SPL" BEGIN
    PATCH_FAIL ~Function fire_spell_immunities was not configured for spell, file: %SOURCE_RES%~
  END
  // Begin : Add Spells from IWDification mod or stratagems mods
  PATCH_IF IDS_OF_SYMBOL("spell" "WIZARD_BELTYNS_BURNING_BLOOD") > 0 BEGIN
    SET code=IDS_OF_SYMBOL("spell" "WIZARD_BELTYNS_BURNING_BLOOD")
    SET code=code - 2000
    SPRINT IWDbbb "SPwi%code%"
  END ELSE BEGIN
    SPRINT IWDbbb ""
  END
  PATCH_IF IDS_OF_SYMBOL("spell" "WIZARD_SHROUD_OF_FLAME") > 0 BEGIN
    SET code=IDS_OF_SYMBOL("spell" "WIZARD_SHROUD_OF_FLAME")
    SET code=code - 2000
    SPRINT IWDshrf "SPwi%code%"
  END ELSE BEGIN
	  SPRINT IWDshrf ""
  END	
  PATCH_IF IDS_OF_SYMBOL("spell" "CLERIC_SUNSCORCH") > 0 BEGIN
    SET code=IDS_OF_SYMBOL("spell" "CLERIC_SUNSCORCH")
    SET code=code - 1000
    SPRINT IWDsuns "SPpr%code%"
  END ELSE BEGIN
    SPRINT IWDsuns ""
  END
  PATCH_IF IDS_OF_SYMBOL("spell" "CLERIC_PRODUCE_FIRE") > 0 BEGIN
	  SET code=IDS_OF_SYMBOL("spell" "CLERIC_PRODUCE_FIRE")
    SET code=code - 1000
    SPRINT IWDprdf "SPpr%code%"
  END ELSE BEGIN
	  SPRINT IWDprdf ""
  END
  PATCH_IF IDS_OF_SYMBOL("spell" "CLERIC_WALL_OF_FIRE") > 0 BEGIN
	  SET code=IDS_OF_SYMBOL("spell" "CLERIC_WALL_OF_FIRE")
    SET code=code - 1000
    SPRINT wallf "SPpr%code%"
  END ELSE BEGIN
	  SPRINT wallf ""
  END
  // End : Add Spells from IWDification mod or stratagems mods
  DEFINE_ARRAY spells BEGIN  
    ~SPIN561~  // Fire Giant Lava Pit (FIRE_GIANT_LAVA)
    ~SPIN819~  // Lava Burst (LAVA_BURST)
    ~SPWI022~  // Lava Pit (TRAP_MUCK)
    ~SPWI103~  // Burning Hands
    ~SPIN131~  // Burning Hands
    ~SPWI217~  // Agannazar's Scorcher
    ~SPWI940~  // Agannazar's Scorcher
    ~SPWI304~  // Fireball
    ~DVFBALL~  // Fireball (IRR + SRR)
    ~SPIN160~  // Breath Fireball
    ~SPWI001~  // Fireball
    ~SPWI957~  // Fireball
    ~WAND05~   // Fireball (IRR)
    ~RR#WI304~ // Pit Fiend Fireball
    ~SPWI523~  // Sunfire
    ~CDSLSUN~  // Sunfire (mod)
    ~A#KOS09~  // Sunfire (Divine Remix)
    ~RR#WI103~ // RR's burning hand
    ~RR#WI523~ // RR's Sunfire (Blazing Glory buckler)
    ~SPWI712~  // Delayed Blast Fireball
    ~A#KOS14~  // Delayed Blast Fireball (Divine Remix)  
    ~SPWI810~  // Incendiary Cloud
    ~DW#TRPIN~ // Incendiary Cloud (Stratagems)
    ~SPWI911~  // Meteor Swarm
    ~SPWI922~  // Dragon's Breath
    ~SPIN719~  // Meteor Swarm
    ~SPWISH24~ // Meteor Swarm
    ~DW#TRPMS~ // Meteor Swarm (Stratagems)
    ~SPPR705~  // Fire Storm
    ~CA#FSTOM~ // Fire Storm (PnP Deva)
    ~RR#PR705~ // Fire Storm (atweaks)
    ~RR#MFIFF~ // Flame Fan (Fire Mephit)
    ~RR#MFIFJ~ // Flame Jet (Fire Mephit)
    ~RR#MFIHA~ // Heat Aura (Fire Mephit)
    ~RR#MMAHE~ // Heat Emission (Magma Mephit)
    ~rr#eimhe~ // Heat Emission (Imix)
    ~rr#eimfb~ // Fireball, 20d6 (Imix)
    ~rr#ezafb~ // Fireball, 12d6 (Zaaman Rul)
    ~rr#eburn~ // Burn (Fire Elemental on-hit effect)
    ~rr#englf~ // Engulf, part 1 (Greater Fire Elemental on-hit effect)
    ~RR#GWOF1~ // Wall of Fire (Efreet)
    ~rr#gfbth~ // Fire breath (Guardian Genie)
    ~%IWDprdf%~// Produe Fire (IWDification)
    ~%IWDbbb%~ // Beltyn's Burning Blood (IWDification)
    ~%IWDshrf%~// Shroud of Flame (IWDification)
    ~%IWDsuns%~// Sunscorch (IWDification)
    ~%wallf%~  // Wall of Fire (SpellPack)
  END
  LPF ADD_IMMUNITY_CRE_ITM_SPL STR_VAR spells END
END


// Cold spell immunities, area effect spell immunities (prevents friendly fire and such)
DEFINE_PATCH_FUNCTION cold_spell_immunities BEGIN
  PATCH_IF "%SOURCE_EXT%" STRING_EQUAL_CASE "SPL" BEGIN
    PATCH_FAIL ~Function cold_spell_immunities was not configured for spell, file: %SOURCE_RES%~
  END
  // Begin : Add Spells from IWDification mod or stratagems mods
  PATCH_IF IDS_OF_SYMBOL("spell" "WIZARD_OTILUKES_FREEZING_SPHERE") > 0 BEGIN
    SET code=IDS_OF_SYMBOL("spell" "WIZARD_OTILUKES_FREEZING_SPHERE")
    SET code=code - 2000
    SPRINT IWDofrs "SPwi%code%"
  END ELSE BEGIN
    SPRINT IWDofrs ""
  END
  PATCH_IF IDS_OF_SYMBOL("spell" "WIZARD_SNILLOCS_SNOWBALL_SWARM") > 0 BEGIN  
    SET code=IDS_OF_SYMBOL("spell" "WIZARD_SNILLOCS_SNOWBALL_SWARM")
    SET code=code - 2000
    SPRINT IWDsss "SPwi%code%"
  END ELSE BEGIN
	  SPRINT IWDsss ""
  END
  PATCH_IF IDS_OF_SYMBOL("spell" "WIZARD_ICELANCE") > 0 BEGIN  
    SET code=IDS_OF_SYMBOL("spell" "WIZARD_ICELANCE")
    SET code=code - 2000
    SPRINT IWDIcel "SPwi%code%"
  END ELSE BEGIN
	  SPRINT IWDIcel ""
  END
  // End : Add Spells from IWDification mod or stratagems mods
  DEFINE_ARRAY spells BEGIN  
       ~SPWI404~ // Ice Storm
      ~RR#WI404~ // aTweaks/RR Ice Storm
       ~SPWI503~ // Cone of Cold
      ~d1#wi503~ // Cone of Cold (mod)
       ~DVCONEC~ // Cone of Cold (IR)
      ~RR#WI503~ // Cone of Cold (aTweaks/RR)
      ~SPCRYO01~ // Cone of Cold (mod)
       ~SPIN133~ // Cone of Cold (mod)
       ~SPIN158~ // Cone of Cold (mod)
       ~SPIN162~ // Cone of Cold (mod)
       ~SPIN833~ // Dragon Cone of Cold
        ~WAND06~ // Cone of Cold (IR)
       ~rr#icew~ // aTweaks' Wall of Ice
      ~rr#efrzn~ // aTweaks' Freeze (Cryonax)
      ~rr#ehyis~ // aTweaks' Ice Storn (Olhydra's version)
     ~%IWDofrs%~ // Otiluke's Freezing Sphere (IWDification)
      ~%IWDsss%~ // Snilloc's Snowball Swarm (IWDification)
     ~%IWDIcel%~ // Icelance (IWDification)
  END
  LPF ADD_IMMUNITY_CRE_ITM_SPL STR_VAR spells END
END


// Electrical spell immunities, area effect spell immunities (prevents friendly fire and such)
DEFINE_PATCH_FUNCTION electrical_spell_immunities BEGIN
  PATCH_IF "%SOURCE_EXT%" STRING_EQUAL_CASE "SPL" BEGIN
    PATCH_FAIL ~Function electrical_spell_immunities was not configured for spell, file: %SOURCE_RES%~
  END
  // Begin : Add Spells from IWDification mod or stratagems mods
  PATCH_IF IDS_OF_SYMBOL("spell" "CLERIC_STATIC_CHARGE") > 0 BEGIN
    SET code=IDS_OF_SYMBOL("spell" "CLERIC_STATIC_CHARGE")
    SET code=code - 1000
    SPRINT IWDstch "SPpr%code%"
  END ELSE BEGIN
    SPRINT IWDstch ""
  END
  // End : Add Spells from IWDification mod or stratagems mods
  DEFINE_ARRAY spells BEGIN  
        ~CDSTAF12~ // Lightning Bolt
        ~SPCL722~  // Lightning Bolt
        ~SPIN579~  // Lightning Bolt
        ~SPIN714~  // Lightning Bolt
        ~SPIN932~  // Lightning Bolt
        ~SPIN933~  // Lightning Bolt
        ~SIN989~   // Lightning Bolt
        ~SPWI002~  // Lightning Bolt
        ~SPWI017~  // Minor Lightning Bolt
        ~SPWI025~  // Minor Lightning Bolt
        ~SPWI026~  // Minor Lightning Bolt
        ~SPWI027~  // Minor Lightning Bolt
        ~SPWI308~  // Lightning Bolt
        ~SPWI399~  // Lightning Bolt
        ~SPWI997~  // Lightning Bolt
       ~RR#WI308~  // RR/aTweaks Lightning Bolt
        ~SPDR601~  // Chain Lightning
        ~SPWI615~  // Chain Lightning
       ~SPBLUN29~  // Chain Lightning
        ~SPPR302~  // Call Lightning
        ~SPPR987~  // Call Lightning
        ~SPIN597~  // Blue Dragon Lightning Breath
      ~%IWDstch%~  // Static Charge (IWDification)
  END
  LPF ADD_IMMUNITY_CRE_ITM_SPL STR_VAR spells END
END


// Acid spell immunities, area effect spell immunities (prevents friendly fire and such)
DEFINE_PATCH_FUNCTION acid_spell_immunities BEGIN
  PATCH_IF "%SOURCE_EXT%" STRING_EQUAL_CASE "SPL" BEGIN
    PATCH_FAIL ~Function acid_spell_immunities was not configured for spell, file: %SOURCE_RES%~
  END
  // Begin : Add Spells from IWDification mod or stratagems mods
  PATCH_IF IDS_OF_SYMBOL("spell" "WIZARD_VITRIOLIC_SPHERE") > 0 BEGIN
    SET code=IDS_OF_SYMBOL("spell" "WIZARD_VITRIOLIC_SPHERE")
    SET code=code - 2000
    SPRINT IWDvsph "SPwi%code%"
  END ELSE BEGIN
    SPRINT IWDofrs ""
  END
  PATCH_IF IDS_OF_SYMBOL("spell" "WIZARD_ACID_STORM") > 0 BEGIN
    SET code=IDS_OF_SYMBOL("spell" "WIZARD_ACID_STORM")
    SET code=code - 2000
    SPRINT IWDastm "SPwi%code%"
  END ELSE BEGIN
	  SPRINT IWDastm ""
  END
  // End : Add Spells from IWDification mod or stratagems mods
  DEFINE_ARRAY spells BEGIN  
        ~SPIN994~   // Acid Pools in Durlag's Tower (ACID_DAMAGE_1)
        ~SPWI614~   // Death Fog
        ~A#CYR11~   // Death Fog (Divine Remix)
        ~SPIN596~   // Brown Dragon Acid Breath
        ~SPIN691~   // Black Dragon Breath
        ~SPIN913~   // Mimic Acid				
				~%IWDvsph%~ // Vitriolic Sphere (IWDification)
				~%IWDastm%~ // Acid Storm (IWDification)
  END
  LPF ADD_IMMUNITY_CRE_ITM_SPL STR_VAR spells END
END


// Poison spell immunities, area effect spell immunities (prevents friendly fire and such)
DEFINE_PATCH_FUNCTION poison_spell_immunities BEGIN
  PATCH_IF "%SOURCE_EXT%" STRING_EQUAL_CASE "SPL" BEGIN
    PATCH_FAIL ~Function poison_spell_immunities was not configured for spell, file: %SOURCE_RES%~
  END
  DEFINE_ARRAY spells BEGIN  
    ~SPWI016~  // Cloudkill (trap)
    ~SPWI502~  // Cloudkill
    ~dvckill~  // Cloudkill (IR/SR)
    ~RR#WI502~ // RR/aTweaks Cloudkill
    ~SPIN979~  // Golem Gas Cloud
    ~SPIN642~  // Poisonous Cloud
    ~RR#SPOI1~ // Spiders Class F poison
    ~RR#spwrt~ // Wraith Spiders Class F poison
  END
  LPF ADD_IMMUNITY_CRE_ITM_SPL STR_VAR spells END
END


// Cure & cause wound spell immunities
DEFINE_PATCH_FUNCTION cure_spell_immunities BEGIN
  PATCH_IF "%SOURCE_EXT%" STRING_EQUAL_CASE "SPL" BEGIN
    PATCH_FAIL ~Function cure_spell_immunities was not configured for spell, file: %SOURCE_RES%~
  END
  // Begin : Add Spells from IWDification mod or stratagems mods
  PATCH_IF IDS_OF_SYMBOL("spell" "CLERIC_CAUSE_MODERATE_WOUNDS") > 0 BEGIN
    SET code=IDS_OF_SYMBOL("spell" "CLERIC_CAUSE_MODERATE_WOUNDS")
    SET code=code - 1000
    SPRINT IWDcamw "SPpr%code%"
  END ELSE BEGIN
    SPRINT IWDcamw ""
  END
  PATCH_IF IDS_OF_SYMBOL("spell" "CLERIC_CURE_MODERATE_WOUNDS") > 0 BEGIN
    SET code=IDS_OF_SYMBOL("spell" "CLERIC_CURE_MODERATE_WOUNDS")
    SET code=code - 1000
    SPRINT IWDcumw "SPpr%code%"
  END ELSE BEGIN
    SPRINT IWDcumw ""
  END
  PATCH_IF IDS_OF_SYMBOL("spell" "CLERIC_CAUSE_LIGHT_WOUNDS") > 0 BEGIN
    SET code=IDS_OF_SYMBOL("spell" "CLERIC_CAUSE_LIGHT_WOUNDS")
    SET code=code - 1000
    SPRINT IWDcalw "SPpr%code%"
  END ELSE BEGIN
    SPRINT IWDcalw ""
  END
  PATCH_IF IDS_OF_SYMBOL("spell" "CLERIC_CAUSE_MEDIUM_WOUNDS") > 0 BEGIN
    SET code=IDS_OF_SYMBOL("spell" "CLERIC_CAUSE_MEDIUM_WOUNDS")
    SET code=code - 1000
    SPRINT IWDcame "SPpr%code%"
  END ELSE BEGIN
    SPRINT IWDcame ""
  END
  PATCH_IF IDS_OF_SYMBOL("spell" "CLERIC_MASS_CAUSE_LIGHT_WOUNDS") > 0 BEGIN
    SET code=IDS_OF_SYMBOL("spell" "CLERIC_MASS_CAUSE_LIGHT_WOUNDS")
    SET code=code - 1000
    SPRINT IWDmcaw "SPpr%code%"
  END ELSE BEGIN
    SPRINT IWDmcaw ""
  END
  PATCH_IF IDS_OF_SYMBOL("spell" "CLERIC_CURE_MEDIUM_WOUNDS") > 0 BEGIN
    SET code=IDS_OF_SYMBOL("spell" "CLERIC_CURE_MEDIUM_WOUNDS")
    SET code=code - 1000
    SPRINT IWDcume "SPpr%code%"
  END ELSE BEGIN
    SPRINT IWDcume ""
  END
  // End : Add Spells from IWDification mod or stratagems mods
  DEFINE_ARRAY spells BEGIN  
    ~SPPR103~   // Cure Light Wounds
    ~A#JUSTCL~  // Cure Light Wounds (Divine Remix)
    ~ca#culw~   // Cure Light Wounds (PnP Deva)              
    ~L#KORIEP~  // Cure Light Wounds (mod) 
    ~A7Q6CURE~  // Cure Light Wounds (afaaq)  
    ~%srcumo%~  // Cure Medium Wounds  (Spell Revisions)
    ~%IWDcumw%~ // Cure moderate Wounds  (IWDification)
    ~%IWDcume%~ // Cure Medium Wounds
    ~SPPR401~   // Cure Serious Wounds
    ~CA#CURSW~  // Cure Serious Wounds (PnP Deva)
    ~SPIN200~   // Cure Serious Wounds
    ~SPIN958~   // Cure Serious Wounds
    ~SPPR404~   // Neutralize Poison
    ~cdilnps~   // Neutralize Poison (mod)
    ~scrl08~    // Neutralize Poison (IR)
    ~SPIN201~   // Neutralize Poison
    ~SPPR502~   // Cure Critical Wounds
    ~SPPR514~   // Mass Cure
    ~A#RE11~    // Mass Cure (Divine Remix)
    ~DVMCURE~   // Mass Cure (IR/SR)
    ~RR#PR514~  // Mass Cure (atweaks temple)
    ~SPPR607~   // Heal
    ~SPWM168~   // Heal (Wild Mage) 
    ~SPWISH39~  // Heal
    ~spin711~   // Heal
    ~spin679~   // Heal
    ~SPIN101~   // Cure Light Wounds (Bhaalpower)
    ~FINP101~   // Cure Light Wounds (TOB Bhaalpower Ascension)
    ~fl#bp101~  // Cure Light Wounds (TOB Bhaalpower atweal)
    ~%IWDcalw%~ // Cause Light Wounds (IWDification)
    ~%IWDcamw%~ // Cause moderate Wounds (IWDification)				
    ~SPIN202~   // Cause Serious Wounds               
    ~SPIN551~   // Cause Serious Wounds (Hive Mother)
    ~SPIN986~   // Cause Serious Wounds (Beholder)
    ~SPPR414~   // Cause Serious Wounds
    ~SPPR510~   // Cause critical Wounds
    ~%IWDcame%~ // Cause medium Wounds (IWDification)	
    ~%IWDmcaw%~ // Mass Cause Light Wounds (IWDification)	
    ~SPCL211~   // Paladin Lay On Hands
    ~BHAAL1A~   // Mass Healing (Bhaalpower restored by Ascension/UB)
    ~RR#DCSW~   // RR/aTweaks Cause Serious Wounds (Marilith)
    ~rr#csw~    // aTweaks Cause Serious Wounds (externalized)
    ~rr#ccw~    // aTweaks Cause Critical Wounds (externalized)
    ~rr#harm~   // aTweaks Harm (externalized)
    ~sppr608~   // Harm
    ~sppr699~   // Harm
  END
  LPF ADD_IMMUNITY_CRE_ITM_SPL INT_VAR displaySpellIneffective=1 STR_VAR spells END
END


// Cloud spell immunities
DEFINE_PATCH_FUNCTION cloud_spell_immunities BEGIN
  PATCH_IF "%SOURCE_EXT%" STRING_EQUAL_CASE "SPL" BEGIN
    PATCH_FAIL ~Function cloud_spell_immunities was not configured for spell, file: %SOURCE_RES%~
  END
  // Begin : Add Spells from IWDification mod or stratagems mods
  PATCH_IF IDS_OF_SYMBOL("spell" "CLERIC_CLOUD_OF_PESTILENCE") > 0 BEGIN
    SET code=IDS_OF_SYMBOL("spell" "CLERIC_CLOUD_OF_PESTILENCE")
    SET code=code - 1000
    SPRINT IWDcldp "SPpr%code%"
  END ELSE BEGIN
    SPRINT IWDcldp ""
  END
  // End : Add Spells from IWDification mod or stratagems mods
  DEFINE_ARRAY spells BEGIN  
    ~SPWI004~   // Stinking Cloud (trap)
    ~SPWI016~   // Cloudkill (trap)
    ~SPWI213~   // Stinking Cloud
    ~SPWI502~   // Cloudkill
    ~SPWI614~   // Death Fog
    ~A#CYR11~   // Death Fog (Divine Remix)
    ~SPWI810~   // Incendiary Cloud
    ~DW#TRPIN~  // Incendiary Cloud (Stratagems)
    ~%IWDcldp%~ // Cloud of Pestilence (IWDification)            
    ~SPIN673~   // Cloudkill
    ~dvckill~   // Cloudkill (IR/SR)
    ~SPIN940~   // Stinking Cloud (mephit)
    ~SPIN979~   // Golem Gas Cloud
    ~SPIN642~   // Poisonous Cloud
    ~RR#WI502~  // aTweaks' Cloudkill (used by Marilith)
    ~RR#MMSWF~  // Wall of Fog (aTweaks' Mist Mephit)
    ~RR#FCLD~   // Fog Cloud (aTweaks' Sirine)
    ~RR#FTVAP~  // Toxic Vapors (aTweaks' Mustard Jelly)
    ~RR#MOZSC~  // Stinking Cloud (aTweaks' Ooze Mephit)
    ~RR#ECHSF~  // Solid Fog (aTweaks)
    ~RR#WI213~  // Stinking Cloud (aTweaks)
  END
  LPF ADD_IMMUNITY_CRE_ITM_SPL INT_VAR displaySpellIneffective=1 STR_VAR spells END
END


// Poison immunity
DEFINE_PATCH_FUNCTION poison_immunity BEGIN
  PATCH_IF "%SOURCE_EXT%" STRING_EQUAL_CASE "SPL" BEGIN
    PATCH_FAIL ~Function poison_immunity was not configured for spell, file: %SOURCE_RES%~
  END
  LPF ADD_IMMUNITY_CRE_ITM_SPL STR_VAR effects=25 prevent_icons=6 display_icons=30 strings="14017 14662" END
  LPF ADD_EFFECT_CRE_ITM_SPL INT_VAR opcode=173 parameter1=100 END
END


// Disease immunity
DEFINE_PATCH_FUNCTION disease_immunity BEGIN
  PATCH_IF "%SOURCE_EXT%" STRING_EQUAL_CASE "SPL" BEGIN
    PATCH_FAIL ~Function disease_immunity was not configured for spell, file: %SOURCE_RES%~
  END
  // Begin : Add Spells from IWDification mod or stratagems mods
  PATCH_IF IDS_OF_SYMBOL("spell" "CLERIC_CAUSE_DISEASE") > 0 BEGIN
    SET code=IDS_OF_SYMBOL("spell" "CLERIC_CAUSE_DISEASE")
    SET code=code - 1000
    SPRINT IWDcdis "SPpr%code%"
  END ELSE BEGIN
    SPRINT IWDcdis ""
  END
  // End : Add Spells from IWDification mod or stratagems mods
  DEFINE_ARRAY spells BEGIN  
    ~SPWI409~   // Contagion
    ~FL#CSDIS~  // aTweaks' Cause Disease
    ~RR#DPDIS~  // aTweaks' Pit Fiend disease
    ~fl#glor2~  // aTweaks' Ghoul Lord disease
    ~fl#mum~    // aTweaks' Mummy disease
    ~fl#gmum~   // aTweaks' Greater Mummy disease
    ~fl#zomsd~  // aTweaks' Zombie Sea disease
    ~rr#gassp~  // aTweaks' (plant) Spore Explosion disease
    ~rr#bogaz~  // aTweaks' Boalisk disease
    ~%IWDcdis%~ // Cause Disease  (IWDification)
  END
  LPF ADD_IMMUNITY_CRE_ITM_SPL STR_VAR effects=78 prevent_icons=7 strings="39752 54337" spells END
END


// Bleeding immunity
DEFINE_PATCH_FUNCTION bleeding_immunity BEGIN
  PATCH_IF "%SOURCE_EXT%" STRING_EQUAL_CASE "SPL" BEGIN
    PATCH_FAIL ~Function bleeding_immunity was not configured for spell, file: %SOURCE_RES%~
  END
  DEFINE_ARRAY spells BEGIN RR#BLEED END
  LPF ADD_IMMUNITY_CRE_ITM_SPL INT_VAR prevent_icons=137 strings=54335 STR_VAR spells END
END


// Web immunity
DEFINE_PATCH_FUNCTION web_immunity BEGIN
  PATCH_IF "%SOURCE_EXT%" STRING_EQUAL_CASE "SPL" BEGIN
    PATCH_FAIL ~Function web_immunity was not configured for spell, file: %SOURCE_RES%~
  END
  DEFINE_ARRAY spells BEGIN  
    ~SPDR201~  // Web (druid version)
    ~SPIN566~  // Mimic Web
    ~SPIN575~  // Vortex web
    ~SPIN683~  // Web Tangle
    ~SPWI215~  // Web (wizard version)
    ~D0SPIWEB~ // Web (D0QUESTPACK)
    ~ETTERWEB~ // Web (heartwood)
    ~spletter~ // Web (heartwood)
    ~wand14~   // Web (IR/IRR)
    ~wtpin05~  // Web (wtp familiar)
    ~rr#spweb~ // aTweaks web tangle
    ~rr#spwr2~ // Wraith web
    ~rr#wi215~ // web (aTweaks)	 			   
  END
  LPF ADD_IMMUNITY_CRE_ITM_SPL STR_VAR effects=157 prevent_icons=129 spells displaySpellIneffective=1 END
END


// Entangle spell and ability immunities
DEFINE_PATCH_FUNCTION entangle_immunities BEGIN
  PATCH_IF "%SOURCE_EXT%" STRING_EQUAL_CASE "SPL" BEGIN
    PATCH_FAIL ~Function entangle_immunities was not configured for spell, file: %SOURCE_RES%~
  END
  PATCH_IF IDS_OF_SYMBOL("spell" "WIZARD_CHARM_PLANTS") > 0 BEGIN					// SpellPack Charm plants
    SET code=IDS_OF_SYMBOL("spell" "WIZARD_CHARM_PLANTS") - 2000
    SPRINT spchpl "SPwi%code%"
  END ELSE BEGIN
    SPRINT spchpl ""
  END
  DEFINE_ARRAY spells BEGIN  
    ~SPPR105~  // Entangle (Priest)
    ~SPWM111~  // Entangle (Wild Mage)
    ~SPIN688~  // Plant Growth (Black Dragon)
    ~RR#SMENT~ // Shambler Entangle (RR)
    ~RR#FENTG~ // Hamadryad Entangle (aTweaks)
    ~%spchpl%~ // Charm plants (SpellPack)
  END
  LPF ADD_IMMUNITY_CRE_ITM_SPL STR_VAR spells displaySpellIneffective=1 END
END


// Insect spell immunities
DEFINE_PATCH_FUNCTION insect_spell_immunities BEGIN
  DEFINE_ARRAY spells BEGIN  
    ~SPPR319~  // Summon Insects
    ~SPPR517~  // Insect Plague
    ~SPPR717~  // Creeping Doom
    ~SPIN689~  // Summon Insects (Black Dragon)
    ~DW#VBAT1~ // Bat Cloud (SCSII)
    ~DW#VBAT2~ // Bat Cloud (SCSII)
    ~CA#IPLAG~ // Insect Plague (PnP Deva)
    ~U#HFDTPD~ // Insect Plague (Ruad)
  END
  LPF ADD_IMMUNITY_CRE_ITM_SPL STR_VAR spells duration=120 resist_dispel=3 power=3 displaySpellIneffective=1 END
END


// Air Affinity
DEFINE_PATCH_FUNCTION air_affinity BEGIN
  PATCH_IF "%SOURCE_EXT%" STRING_EQUAL_CASE "SPL" BEGIN
    PATCH_FAIL ~Function air_affinity was not configured for spell, file: %SOURCE_RES%~
  END
  DEFINE_ASSOCIATIVE_ARRAY flyers BEGIN
    118 => 4  // Wyvern
    123 => 4  // Beholder
    136 => 4  // Mist
    139 => 4  // Mephit
    146 => 4  // Dragon
    193 => 5  // Djinni
    196 => 5  // Noble Djinni
    156 => 4  // Solar
    157 => 4  // Antisolar
    158 => 4  // Planatar
    159 => 4  // Darkplanatar
    186 => 5  // Elemental_Air
  END
  PATCH_PHP_EACH flyers AS p1 => p2 BEGIN
    // Damage vs. Creature Type Modifier, Self, Instant/Permanent, IDS Entry, IDS File, Damage bonus
    LPF ADD_EFFECT_CRE_ITM_SPL INT_VAR opcode=179 parameter1=EVALUATE_BUFFER "%p1%" parameter2=EVALUATE_BUFFER "%p2%" parameter3=4 END
    // THAC0 vs. Creature Type Modifier, Self, Instant/Permanent, IDS Entry, IDS File, THAC0 bonus
    LPF ADD_EFFECT_CRE_ITM_SPL INT_VAR opcode=178 parameter1=EVALUATE_BUFFER "%p1%" parameter2=EVALUATE_BUFFER "%p2%" parameter3=1 END
  END
END


// Earth Affinity
DEFINE_PATCH_FUNCTION earth_affinity BEGIN
  PATCH_IF "%SOURCE_EXT%" STRING_EQUAL_CASE "SPL" BEGIN
    PATCH_FAIL ~Function earth_affinity was not configured for spell, file: %SOURCE_RES%~
  END
  DEFINE_ASSOCIATIVE_ARRAY air_and_water BEGIN
    118 => 4  // Wyvern
    123 => 4  // Beholder
    131 => 4  // Sahuagin
    135 => 4  // Kuo-Toa
    136 => 4  // Mist
    139 => 4  // Mephit
    146 => 4  // Dragon
    193 => 5  // Djinni
    196 => 5  // Noble Djinni
    156 => 4  // Solar
    157 => 4  // Antisolar
    158 => 4  // Planatar
    159 => 4  // Darkplanatar
    186 => 5  // Elemental_Air
    132 => 5  // Fairy_Nereid
  END
  DEFINE_ARRAY spells BEGIN  
    ~SPOGRE01~ // Earthquake (Ogremoch)
     ~SPPR720~ // Earthquake (Priest version)
     ~rr#equa~ // Earthquake (aTweaks)
       ~CA#EQ~ // Earthquake (PnP Deva)
     ~CDTLQAK~ // Earthquake (mod)
    ~rr#r2mud~ // Rock to mud spell (Dao)
  END
  LPF ADD_IMMUNITY_CRE_ITM_SPL STR_VAR spells displaySpellIneffective=1 END
  PATCH_PHP_EACH air_and_water AS p1 => p2 BEGIN
    // Damage vs. Creature Type Modifier, Self, Instant/Permanent, IDS Entry, IDS File, Damage bonus
    LPF ADD_EFFECT_CRE_ITM_SPL INT_VAR opcode=179 parameter1=EVALUATE_BUFFER "%p1%" parameter2=EVALUATE_BUFFER "%p2%" parameter3="-2" END
    // THAC0 vs. Creature Type Modifier, Self, Instant/Permanent, IDS Entry, IDS File, THAC0 bonus
    LPF ADD_EFFECT_CRE_ITM_SPL INT_VAR opcode=178 parameter1=EVALUATE_BUFFER "%p1%" parameter2=EVALUATE_BUFFER "%p2%" parameter3="-2" END
  END
END


// Petrification immunity
DEFINE_PATCH_FUNCTION petrification_immunity BEGIN
  PATCH_IF "%SOURCE_EXT%" STRING_EQUAL_CASE "SPL" BEGIN
    PATCH_FAIL ~Function petrification_immunity was not configured for spell, file: %SOURCE_RES%~
  END
  LPF ADD_IMMUNITY_CRE_ITM_SPL STR_VAR effects=134 strings=14665 END
END


// Clear BG1 weapon proficiencies
DEFINE_PATCH_FUNCTION clear_bg1_profs BEGIN
  READ_ASCII 0 sig (3)
  PATCH_MATCH "%sig%" WITH
    ~CRE~ BEGIN
      PATCH_FOR_EACH ~bg1_prof~ IN ~0x6e~ ~0x6f~ ~0x70~ ~0x71~ ~0x72~ ~0x73~ ~0x74~ ~0x75~ BEGIN
        WRITE_BYTE %bg1_prof% 0
      END
    END
  DEFAULT END
END


// Missile weapon immunity
DEFINE_PATCH_FUNCTION missile_weapon_immunity BEGIN
  PATCH_FOR_EACH ~missile~ IN
    ~1~  // Arrow of Slaying
    ~2~  // Exploding Arrow
    ~3~  // Acid Arrow
    ~4~  // Arrow/Arrow +1
    ~6~  // Throwing Axe
    ~7~  // Throwing Axe
    ~8~  // Bolt
    ~9~  // Throwing Axe
    ~10~ // Throwing Axe
    ~11~ // Bolt+1, Bolt of Biting/Polymorph
    ~12~ // Exploding Bolt
    ~13~ // Bolt (?)
    ~14~ // Bolt
    ~15~ // Bolt of Lightning
    ~16~ // Bullet
    ~17~ // Bullet +1, Sunstone Bullet
    ~18~ // Bullet
    ~19~ // Bullet
    ~26~ // Throwing Dagger
    ~27~ // Throwing Dagger (?)
    ~28~ // Throwing Dagger (?)
    ~29~ // Fire Tooth +3
    ~30~ // Throwing Dagger (?)
    ~31~ // Asp's Nest, Dart of Stunning...
    ~32~ // Dart
    ~33~ // Dart (?)
    ~34~ // Dart (?)
    ~35~ // Dart (?)
    ~55~ // Spear
    ~56~ // Spear
    ~57~ // Spear
    ~58~ // Spear
    ~59~ // Spear
    ~102~ // Flame Arrow Blue
    ~232~ // Energy Spear (Gesen's Bow)
  BEGIN
    LPF ADD_EFFECT_CRE_ITM_SPL INT_VAR opcode=83 parameter2=EVAL "%missile%" END
  END
END


// Sleep immunity
DEFINE_PATCH_FUNCTION sleep_immunity BEGIN
  PATCH_IF "%SOURCE_EXT%" STRING_EQUAL_CASE "SPL" BEGIN
    PATCH_FAIL ~Function sleep_immunity was not configured for spell, file: %SOURCE_RES%~
  END
  LPF ADD_IMMUNITY_CRE_ITM_SPL STR_VAR effects=39 prevent_icons="14 130" strings="14001 20438" END  
END


// Charm immunity
DEFINE_PATCH_FUNCTION charm_immunity BEGIN
  PATCH_IF "%SOURCE_EXT%" STRING_EQUAL_CASE "SPL" BEGIN
    PATCH_FAIL ~Function charm_immunity was not configured for spell, file: %SOURCE_RES%~
  END
  LPF ADD_IMMUNITY_CRE_ITM_SPL STR_VAR effects=5 prevent_icons="0 1 43" strings="8364 14672 14780" animations="SPNWCHRM" END  
END


// Fear immunity
DEFINE_PATCH_FUNCTION fear_immunity BEGIN
  PATCH_IF "%SOURCE_EXT%" STRING_EQUAL_CASE "SPL" BEGIN
    PATCH_FAIL ~Function fear_immunity was not configured for spell, file: %SOURCE_RES%~
  END
  PATCH_IF IDS_OF_SYMBOL("spell" "WIZARD_EMOTION_FEAR") > 0 BEGIN					// SpellPack Charm plants
    SET code=(IDS_OF_SYMBOL("spell" "WIZARD_EMOTION_FEAR") - 2000 )
    SPRINT spfear "SPwi%code%"
  END ELSE BEGIN
    SPRINT spfear ""
  END
  DEFINE_ARRAY spells BEGIN  
    ~SPIN203~  // Cloak of Fear
    ~SPIN536~  // Fear
    ~SPIN807~  // Salyer Fear
    ~SPIN882~  // Vampire Fear
    ~SPIN890~  // Demon Fear
    ~SPIN895~  // Dragon Fear
    ~SPIN981~  // Fear
    ~SPPR416~  // Cloak of Fear
    ~SPPR706~  // Symbol, Fear
    ~SPWI125~  // Spook
    ~SPWI205~  // Horror
    ~SPWI811~  // Symbol, Fear
    ~SPWI899~  // Symbol, Fear
    ~SPWI956~  // Symbol, Fear
    ~SPWM123~  // Symbol, Fear
    ~fl#cnefr~ // Fear
    ~fl#shafi~ // Fear
    ~fl#tchfr~ // Fear
    ~dw#licfi~ // Fear Aura
    ~ca#sfear~ // Symbol, Fear
    ~A^causfr~ // Cause Fear
    ~rr#dcfea~ // Cause Fear
    ~rr#dcfa1~ // Aura of Fear
    ~rr#dcfa2~ // Aura of Fear
    ~rr#dmfea~ // Blast of Fear
    ~rr#scare~ // Cloak of Fear
    ~rr#wi811~ // Symbol, Fear
    ~DVFEARSM~ // Panic
    ~DVHORRO~  // Panic
    ~%spfear%~ // Emotion: Fear
  END
  LPF ADD_IMMUNITY_CRE_ITM_SPL INT_VAR displaySpellIneffective=1 STR_VAR effects="106 23 24" prevent_icons=36 strings="14007 17427 20568" spells animations="CDHORROR" END
END


// Confusion immunity
DEFINE_PATCH_FUNCTION confusion_immunity BEGIN
  PATCH_IF "%SOURCE_EXT%" STRING_EQUAL_CASE "SPL" BEGIN
    PATCH_FAIL ~Function confusion_immunity was not configured for spell, file: %SOURCE_RES%~
  END
  DEFINE_ARRAY spells BEGIN  
    ~SPPR709~ // Confusion (priest version)
    ~SPWI401~ // Confusion (wizard version)
    ~SPIN582~ // Confusion
    ~SPIN704~ // Confusion
    ~SPIN839~ // Confusion
    ~SPIN976~ // Confusion
    ~SPPR983~ // Confusion
    ~MISC3M~  // Confusion (Divine Remix)
    ~A#SHA07~ // Confusion (Divine Remix)
    ~RR#WI401~// Confusion (atweaks)
  END
  LPF ADD_IMMUNITY_CRE_ITM_SPL INT_VAR displaySpellIneffective=1 STR_VAR effects=128 prevent_icons=3 strings="14791 14782" spells animations="SPCONFUS" END
END


// Polymorph immunity
DEFINE_PATCH_FUNCTION polymorph_immunity BEGIN
  PATCH_IF "%SOURCE_EXT%" STRING_EQUAL_CASE "SPL" BEGIN
    PATCH_FAIL ~Function polymorph_immunity was not configured for spell, file: %SOURCE_RES%~
  END
  DEFINE_ARRAY spells BEGIN  
    ~SPIN538~ // Polymorph Other
    ~SPWI415~ // Polymorph Other
    ~CA#PAOO~ // Polymorph Other (Pnp Celestial)
  END
  LPF ADD_IMMUNITY_CRE_ITM_SPL INT_VAR displaySpellIneffective=1 STR_VAR effects=135 prevent_icons=124 strings="339 351 809 1482 54332 14128" spells END
END


// Vorpal immunity
DEFINE_PATCH_FUNCTION vorpal_immunity BEGIN
  PATCH_IF "%SOURCE_EXT%" STRING_EQUAL_CASE "SPL" BEGIN
    PATCH_FAIL ~Function vorpal_immunity was not configured for spell, file: %SOURCE_RES%~
  END
  LPF ADD_IMMUNITY_CRE_ITM_SPL STR_VAR effects="55 13" prevent_icons=124 strings="64285 14026 10554" END
END


// Hold immunity
DEFINE_PATCH_FUNCTION hold_immunity BEGIN
  PATCH_IF "%SOURCE_EXT%" STRING_EQUAL_CASE "SPL" BEGIN
    PATCH_FAIL ~Function hold_immunity was not configured for spell, file: %SOURCE_RES%~
  END
  LPF ADD_IMMUNITY_CRE_ITM_SPL STR_VAR effects="109 175" prevent_icons=13 strings=14102 animations="SPFLAYER SPMINDAT" END
END                                                                                    // ends DEFINE_PATCH_FUNCTION


// Stun immunity
DEFINE_PATCH_FUNCTION stun_immunity BEGIN
  PATCH_IF "%SOURCE_EXT%" STRING_EQUAL_CASE "SPL" BEGIN
    PATCH_FAIL ~Function stun_immunity was not configured for spell, file: %SOURCE_RES%~
  END
  LPF ADD_IMMUNITY_CRE_ITM_SPL STR_VAR effects="45 210" prevent_icons=55 strings="1280 14043" END
END                                                                                    // ends DEFINE_PATCH_FUNCTION


// Skeletal traits
DEFINE_PATCH_FUNCTION add_skeletal_traits BEGIN
  PATCH_IF "%SOURCE_EXT%" STRING_EQUAL_CASE CRE AND SOURCE_SIZE > 0x2d3 BEGIN
    WRITE_BYTE 0x5a 100 //Cold
    WRITE_BYTE 0x5f 100 //Magic cold
    WRITE_BYTE 0x60 50  //Slashing
    WRITE_BYTE 0x62 50  //Piercinc
    WRITE_BYTE 0x63 50  //Missile
    LPF cold_spell_immunities END
  END ELSE BEGIN
    PATCH_FAIL ~Incorrect file type or below minimum size~
  END
END


// Immunity to Turn Undead
DEFINE_PATCH_FUNCTION unturnable BEGIN
  PATCH_IF !("%SOURCE_EXT%" STRING_EQUAL_CASE "CRE") BEGIN
    PATCH_FAIL ~Function unturnable was not configured for spell or item, file: %SOURCE_RES%~
  END
  LPF ADD_CRE_EFFECT INT_VAR opcode=297 target=1 timing=9 paramater2=1 END
END


// Illusion immmunity
DEFINE_PATCH_FUNCTION illusion_immunity BEGIN
  PATCH_IF "%SOURCE_EXT%" STRING_EQUAL_CASE "SPL" BEGIN
    PATCH_FAIL ~Function illusion_immunity was not configured for spell, file: %SOURCE_RES%~
  END
  DEFINE_ARRAY spells BEGIN  
    sppr704 //Nature's beauty
    spwi106 //Blindness
    IKDB2   //Spook (mod)
    spwi125 //Spook
    spwi223 //Deafness
    spwm178 //Blindness (Wild mage)
  END
  LPF ADD_IMMUNITY_CRE_ITM_SPL INT_VAR displaySpellIneffective=1 STR_VAR spells END
END


// Extraplanar traits
DEFINE_PATCH_FUNCTION extraplanar_traits BEGIN
  PATCH_IF "%SOURCE_EXT%" STRING_EQUAL_CASE "SPL" BEGIN
    PATCH_FAIL ~Function extraplanar_traits was not configured for spell, file: %SOURCE_RES%~
  END
  DEFINE_ARRAY spells BEGIN  
    ~SPWI605~ // Death Spell
    ~cdxvdth~ // Death Spell (mod)
  END
  LPF ADD_IMMUNITY_CRE_ITM_SPL INT_VAR displaySpellIneffective=1 STR_VAR spells END
  LPF cure_spell_immunities END                                        
END


// Hover (flight) spell immunities
DEFINE_PATCH_FUNCTION hover_immunities BEGIN
  PATCH_IF "%SOURCE_EXT%" STRING_EQUAL_CASE "SPL" BEGIN
    PATCH_FAIL ~Function hover_immunities was not configured for spell, file: %SOURCE_RES%~
  END
  DEFINE_ARRAY spells BEGIN  
    ~SPIN561~ // Fire Giant Lava Pit (FIRE_GIANT_LAVA)
    ~SPIN819~ // Lava Burst (LAVA_BURST)
    ~SPIN994~ // Acid Pools in Durlag's Tower (ACID_DAMAGE_1)
    ~SPWI022~ // Lava Pit (TRAP_MUCK)
    ~SPIN914~ // Mimic Glue
   ~SPOGRE01~ // Earthquake (Ogremoch)
    ~SPPR720~ // Earthquake (Priest version)
    ~rr#equa~ // Earthquake (aTweaks)
      ~CA#EQ~ // Earthquake (PnP Deva)
    ~CDTLQAK~ // Earthquake (mod)
    ~SPWI101~ // Grease
   ~rr#r2mud~	// Rock to mud spell (Dao)
  END
  LPF ADD_IMMUNITY_CRE_ITM_SPL STR_VAR spells END
  LPF entangle_immunities END                                          
  LPF web_immunity END
END


// Fire Salamander immunities (these apply for the noble variety too, but not for Frost Salamanders)
DEFINE_PATCH_FUNCTION fire_salamander_immunities BEGIN
  LPF charm_immunity END
  LPF sleep_immunity END
  LPF hold_immunity END 
  LPF fire_spell_immunities END
  LPF extraplanar_traits END
END


// Water Elemental effect
DEFINE_PATCH_FUNCTION add_water_elemental_effects BEGIN
  PATCH_IF "%SOURCE_EXT%" STRING_EQUAL_CASE "SPL" BEGIN
    PATCH_FAIL ~Function add_water_elemental_effects was not configured for spell, file: %SOURCE_RES%~
  END
  LPF ADD_EFFECT_CRE_ITM_SPL INT_VAR opcode=52 parameter1=0x02000000 parameter2=0x2 END // Character tint
  LPF ADD_EFFECT_CRE_ITM_SPL INT_VAR opcode=66 parameter1=100 END // Translucency
  LPF entangle_immunities END
  LPF web_immunity END
END


// Plant traits
DEFINE_PATCH_FUNCTION plant_traits BEGIN
  LPF disease_immunity END
  LPF bleeding_immunity END
  LPF petrification_immunity END
  LPF stun_immunity END
  LPF hold_immunity END
  LPF polymorph_immunity END
  LPF confusion_immunity END
  LPF charm_immunity END
  LPF fear_immunity END
  LPF sleep_immunity END
  LPF illusion_immunity END
  LPF poison_immunity END
  LPF insect_spell_immunities END
  LPF entangle_immunities END
END


// Set enchantment, and account for detectable enchantment from DS
DEFINE_PATCH_FUNCTION set_enchantment INT_VAR enchantment = 1 BEGIN
  PATCH_IF "%SOURCE_EXT%" STRING_EQUAL_CASE "ITM" BEGIN
    WRITE_LONG 0x60 enchantment
    READ_LONG 0x6a eo
    done = 0
    FOR (i = 0; i < SHORT_AT 0x70; ++i) BEGIN
      READ_SHORT eo + 0x30 * i       type
      READ_LONG  eo + 0x30 * i + 0x8 prof
      PATCH_IF type = 233 AND prof = 109 BEGIN
        WRITE_LONG eo + 0x30 * i + 0x4 enchantment
        done = 1
      END
    END
    PATCH_IF !done BEGIN
      LPF ADD_ITEM_EQEFFECT INT_VAR opcode=233 target=1 parameter1=enchantment parameter2=109 timing=2 END
    END
  END
END


// Will increase the priority of a single script matching the regexp script to the first empty script slot.
// Script slots with scripts matching the regexp kill will be treated as empty.
DEFINE_PATCH_FUNCTION promote_script STR_VAR script = "^$" kill = "^$" BEGIN
  PATCH_IF "%SOURCE_EXT%" STRING_EQUAL_CASE "CRE" AND SOURCE_SIZE > 0x2d3 BEGIN
    FOR (o = 0x248; o < 0x270; o += 0x8) BEGIN
      READ_ASCII o s1
      PATCH_IF "%s1%" STRING_MATCHES_REGEXP "%script%" = 0 BEGIN
        FOR (p = 0x248; p < 0x270 AND p < o; p += 0x8) BEGIN
          READ_ASCII p s2
          PATCH_IF "%s2%" STRING_EQUAL "" OR "%s2%" STRING_EQUAL_CASE none OR "%s2%" STRING_MATCHES_REGEXP "%kill%" = 0 BEGIN
            WRITE_ASCII  o "" #8
            WRITE_ASCIIE p "%s1%" #8
            p = SOURCE_SIZE
            o = SOURCE_SIZE
          END
        END
      END
    END
  END ELSE PATCH_FAIL "promote_script: incorrect signature or below minimum file size (%SOURCE_FILE%)"
END


DEFINE_PATCH_FUNCTION make_summon STR_VAR slot = boots BEGIN
  PATCH_IF "%SOURCE_EXT%" STRING_EQUAL_CASE "CRE" AND SOURCE_SIZE > 0x2d3 BEGIN
    WRITE_LONG 0x14 0                                                // No experience from summons
    WRITE_BYTE 0x275 6                                               // Gender: Summon
    WRITE_BYTE 0x10 (THIS BOR BIT1) BAND 0xfb                        // Set 'No corpse' (BIT1) and unset 'Permanent Corpse' (BIT2)
    ADD_CRE_ITEM rr#dinv #0 #0 #0 "unstealable&undroppable" "%slot%" // item for keeping summons from being killed before the summoning is done
    ADD_MEMORIZED_SPELL rr#usumn #0 innate (1)                       // 'Unsummon' spell
    WRITE_ASCIIL SCRIPT_OVERRIDE "" "" "" "" ""                      // Clear all scripts; correct scripts are set by the specialised code
  END ELSE PATCH_FAIL "make_summon: incorrect signature or below minimum file size (%SOURCE_FILE%)"
END


// Basically, with their vanilla scripts, Davaeorn and Andris can act buggy with the IWD/PnP Dimension Door spell, so we keep them on the old spell.
DEFINE_ACTION_FUNCTION handle_old_dd BEGIN
  ACTION_IF !FILE_EXISTS_IN_GAME fl#ddold.spl AND !FILE_EXISTS_IN_GAME dw#mage.mrk AND GAME_INCLUDES ~bg1~ BEGIN
    COPY_EXISTING spwi402.spl "override/fl#ddold.spl"
    ACTION_FOR_EACH script IN "%TUTU_VAR%andris" "davaeorn" "_avaeorn" BEGIN
      ACTION_IF FILE_EXISTS_IN_GAME "%script%.bcs" BEGIN
        COPY_EXISTING "%script%.bcs" override
          DECOMPILE_AND_PATCH BEGIN
            REPLACE_TEXTUALLY ~ForceSpellPoint(\(.+\),WIZARD_DIMENSION_DOOR)~ ~ForceSpellPointRES("fl#ddold",\1)~
            REPLACE_TEXTUALLY ~SpellNoDec(\(.+\),WIZARD_DIMENSION_DOOR)~ ~SpellNoDecRES("fl#ddold",\1)~
          END
        BUT_ONLY
        UNLESS "fl#ddold"
      END
    END
  END
END

DEFINE_ACTION_FUNCTION make_dimension_door
STR_VAR
  graphic = ""
  sound = ""
BEGIN
  ACTION_FOR_EACH spell IN spwi402 spwi450 BEGIN
    ACTION_IF FILE_EXISTS_IN_GAME "%spell%.spl" BEGIN
      COPY "atweaks/spl/spwi402.spl" "override/%spell%.spl"
        FOR (off = LONG_AT 0x6a; off < BUFFER_LENGTH; off += 0x30) BEGIN
          READ_SHORT off opcode
          PATCH_IF opcode = 215 BEGIN // play animation
            WRITE_ASCIIE off + 0x14 "%graphic%" #8 // resref
            WRITE_LONG off + 0x8 0 //p2: play over target, unattached
          END
          PATCH_IF opcode = 174 BEGIN // play sound
            WRITE_ASCIIE off + 0x14 "%sound%" #8 // resref
          END
        END
      BUT_ONLY
    END
  END
END


DEFINE_PATCH_FUNCTION dd_animation
  INT_VAR
    off = "-1"
    opcode = 999
    p2 = "-1"
  STR_VAR
    rr = ""
    graphic = ""
BEGIN
  PATCH_IF opcode = 141 AND p2 = 38 BEGIN // lighting effect: dimension door
    WRITE_SHORT  off        215 // play animation
    WRITE_LONG   off + 0x8  0 // p2: play over target, unattached
    WRITE_BYTE   off + 0xc  0 // timing
    WRITE_LONG   off + 0xe  1 // duration
    WRITE_ASCIIE off + 0x14 "%graphic%" #8 // resref
  END
END


DEFINE_PATCH_FUNCTION dd_sound
  INT_VAR
    off = "-1"
    opcode = 999
  STR_VAR
    rr = ""
    sound = ""
BEGIN
  PATCH_IF opcode = 174 AND "%rr%" STRING_EQUAL_CASE EFF_M09 BEGIN // play sound
    WRITE_LONG   off + 0xe  1 // duration
    WRITE_ASCIIE off + 0x14 "%sound%" #8 // resref
  END
END


DEFINE_ACTION_FUNCTION make_shadow_door
STR_VAR
  graphic = ""
  sound = ""
BEGIN
  COPY_EXISTING spwi505.spl override
    FOR (off = LONG_AT 0x6a; off < BUFFER_LENGTH; off += 0x30) BEGIN
      READ_SHORT off        opcode
      READ_LONG  off + 0x8  p2
      READ_ASCII off + 0x14 rr
      LPF dd_animation INT_VAR off opcode p2 STR_VAR rr graphic END
      LPF dd_sound INT_VAR off opcode STR_VAR rr sound END
    END
  BUT_ONLY
END


DEFINE_ACTION_FUNCTION make_dryad_teleport
STR_VAR
  graphic = ""
  sound = ""
BEGIN
  COPY_EXISTING spwi995.spl override
    FOR (off = LONG_AT 0x6a; off < BUFFER_LENGTH; off += 0x30) BEGIN
      READ_SHORT off opcode
      READ_LONG  off + 0x8 p2
      LPF dd_animation INT_VAR off opcode p2 STR_VAR rr graphic END
      LPF dd_sound INT_VAR off opcode STR_VAR rr sound END
      PATCH_IF opcode = 68 BEGIN // unsummon
        // Dryad Teleport can't be instant; it breaks cutscenes.
        WRITE_BYTE  off + 0xc  4 // timing
        WRITE_LONG  off + 0xe  1 // duration
      END
    END
  BUT_ONLY
END

DEFINE_PATCH_FUNCTION fiend_summoning_spell
INT_VAR
  duration = 120
STR_VAR
  lawful = rr#scorn
  lcneutral = fl#sarca
  chaotic = spcaco
BEGIN
  LPF DELETE_SPELL_EFFECT INT_VAR opcode_to_delete = 177 END
  SET $p1("%lawful%") = 16    // MASK_LAWFUL
  SET $p1("%lcneutral%") = 32 // MASK_LCNEUTRAL
  SET $p1("%chaotic%") = 48   // MASK_CHAOTIC
  PATCH_FOR_EACH resource IN "%lawful%" "%lcneutral%" "%chaotic%" BEGIN
    LPF ADD_SPELL_EFFECT INT_VAR opcode=177 target=1 parameter1=$p1("%resource%") parameter2=8 resist_dispel=2 duration STR_VAR resource END
  END
END


DEFINE_PATCH_FUNCTION minimum_proficiency
INT_VAR
  value = 1
  proficiency = 0
BEGIN
  PATCH_IF value >= 0 AND proficiency >= 0 BEGIN
    coveredp = 0
    GET_OFFSET_ARRAY effect_array 0x2c4 4 0x2c8 4 0 0 0x108
    PHP_EACH effect_array AS i => off BEGIN
      READ_LONG off + 0x08 opcode
      READ_LONG off + 0x14 stars
      READ_LONG off + 0x18 prof
      PATCH_IF opcode = 233 AND prof = proficiency AND stars >= value BEGIN
        coveredp = 1
      END
    END
    PATCH_IF !coveredp BEGIN
      SET_BG2_PROFICIENCY proficiency value
    END
  END ELSE BEGIN
    PATCH_WARN "WARNING: minimum_proficiency received illegal arguments: value = %value%, proficiency = %proficiency%"
  END
END
