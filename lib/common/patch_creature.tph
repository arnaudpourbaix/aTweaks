// Creature modification function
// Useful for situations where you don't want to lower a pre-existing value in case it's higher than the one you define
// However, it is possible to enforce the values on CREs that are marked using the enfcXX string variables
// When enforce, will always use specified values even if the existing ones are better
DEFINE_PATCH_FUNCTION patchCreature
INT_VAR
  movement=999          // new movement rate
  xpv=0                 // new XP value
  hp=0                  // new hit point value
  ac=99                 // new Armor Class value
  thac0=99              // new THAC0 value
  apr=99                // new number of attacks per round
  saveDeath=20          // new Save vs. Death
  saveWand=20           // new Save vs. Wand
  savePolymorph=20      // new Save vs. Polymorph
  saveBreath=20         // new Save vs. Breath
  saveSpell=20          // new Save vs. Spell
  level1=0              // new level (first class)
  level2=0              // new level (second)
  level3=0              // new level (third)
  resistFire=0          // new Resist Fire value
  resistCold=0          // new Resist Cold value
  resistElectricity=0   // new Resist Electricity value
  resistAcid=0          // new Resist Acid value
  resistMagic=0         // new Resist Magic value
  resistSlashing=0      // new Resist Slashing
  resistCrushing=0      // new Resist Crushing
  resistPiercing=0      // new Resist Piercing
  resistMissile=0       // new Resist Missiles
  strength=0            // new strength value
  exceptionalStrength=0 // new Exceptional strength value
  intelligence=0        // new Intelligence value
  wisdom=0              // new Wisdom value
  dexterity=0           // new Dexterity value
  constitution=0        // new Constitution value
  charisma=0            // new Charisma value
  morale=99             // new morale value
  moraleBreak=99        // new morale break value
  moraleRecovery=99     // new morale recovery value
  allegiance=999        // new Allegiance value
  general=999           // new general value
  race=999              // new race
  class=999             // new class
  gender=999            // new gender
  sex=99                // new sex
  alignment=99          // new alignment
  hideShadow=999        // new Hide in Shadows value
  moveSilent=999        // new Move Silently value
  perfect2weapon=0      // perfect two weapon fighting (for creatures with multiple weapons)
  bump=0                // NPC bump (allows the creature to movee others out of its way)
  seeInvisible=0        // See invisible creatures
  backstabImmunity=0    // Backstab immunity
  infravision=0         // Infravision
  blur=0                // Blur
  enforce =0            // values are not enforced by default
STR_VAR
  enforceFiles=""             // Array of files to enforce
  notEnforceFiles=""          // Array of files to not enforce
  enforceFileRegexp="^$"     // Enforce stats for all matching SOURCE_RES
  notEnforceFileRegexp="^$"  // Do not enforce stats for any matching SOURCE_RES
BEGIN
  READ_LONG   0x14 oldXpv
  READ_SHORT  0x24 currentHP
  READ_SHORT  0x26 maxHP
  READ_SSHORT 0x46 naturalAC
  READ_SSHORT 0x48 effectiveAC
  READ_SBYTE  0x52 oldThac0
  READ_SBYTE  0x53 oldApr
  READ_SBYTE  0x54 oldSaveDeath
  READ_SBYTE  0x55 oldSaveWand
  READ_SBYTE  0x56 oldSavePolymorph
  READ_SBYTE  0x57 oldSaveBreath
  READ_SBYTE  0x58 oldSaveSpell
  READ_SBYTE  0x59 oldResistFire
  READ_SBYTE  0x5a oldResistCold
  READ_SBYTE  0x5b oldResistElectricity
  READ_SBYTE  0x5c oldResistAcid
  READ_SBYTE  0x5d oldResistMagic
  READ_SBYTE  0x60 oldResistSlashing
  READ_SBYTE  0x61 oldResistCrushing
  READ_SBYTE  0x62 oldResistPiercing
  READ_SBYTE  0x63 oldResistMissile
  READ_BYTE  0x234 oldLevel1
  READ_BYTE  0x235 oldLevel2
  READ_BYTE  0x236 oldLevel3
  READ_BYTE  0x237 oldSex
  READ_BYTE  0x238 oldStrength
  READ_BYTE  0x239 oldExceptionalStrength
  READ_BYTE  0x23a oldIntelligence
  READ_BYTE  0x23b oldWisdom
  READ_BYTE  0x23c oldDexterity
  READ_BYTE  0x23d oldConstitution
  READ_BYTE  0x23e oldCharisma
  READ_BYTE  0x23f oldMorale
  READ_BYTE  0x240 oldMoraleBreak
  READ_BYTE  0x242 oldMoraleRecovery
  READ_BYTE  0x45  oldHideShadow
  READ_BYTE  0x68  oldMoveSilent

  PATCH_PHP_EACH EVAL ~%enforceFiles%~ AS _ => f BEGIN
    PATCH_IF "%SOURCE_RES%" STRING_EQUAL_CASE "%f%" BEGIN             
      SET enforce=1
    END
  END
  PATCH_IF "%SOURCE_RES%" STRING_MATCHES_REGEXP "%enforceFileRegexp%" = 0 BEGIN
    enforce=1
  END
  PATCH_PHP_EACH EVAL ~%notEnforceFiles%~ AS _ => f BEGIN
    PATCH_IF "%SOURCE_RES%" STRING_EQUAL_CASE "%f%" BEGIN             
      SET enforce=0
    END
  END
  PATCH_IF "%SOURCE_RES%" STRING_MATCHES_REGEXP "%notEnforceFileRegexp%" = 0 BEGIN
    enforce=0
  END
  // PATCH_PRINT ~Enforce for %SOURCE_RES%: %enforce%~

  PATCH_IF oldXpv < xpv OR (enforce = 1 AND xpv != 0) BEGIN
    WRITE_LONG 0x14 xpv // set new XP value
  END
  PATCH_IF currentHP < hp OR (enforce = 1 AND hp != 0) BEGIN
    WRITE_SHORT 0x24 hp // set current hit points
  END
  PATCH_IF maxHP < hp OR (enforce = 1 AND hp != 0) BEGIN
    WRITE_SHORT 0x26 hp // set maximum hit points
  END
  PATCH_IF naturalAC > ac OR (enforce = 1 AND ac != 99) BEGIN
    WRITE_SHORT 0x46 ac // set natural Armor Class
  END
  PATCH_IF effectiveAC > ac OR (enforce = 1 AND ac != 99) BEGIN
    WRITE_SHORT 0x48 ac // set effective Armor Class
  END
  PATCH_IF oldThac0 > thac0 OR (enforce = 1 AND thac0 != 99) BEGIN
    WRITE_BYTE 0x52 thac0 // set new THAC0 value
  END
  PATCH_IF apr != 99 AND (oldApr < apr OR enforce = 1) BEGIN
    WRITE_BYTE 0x53 apr // set new number of attacks per round
  END
  PATCH_IF oldSaveDeath > saveDeath OR (enforce = 1 AND saveDeath != 20) BEGIN
    WRITE_BYTE 0x54 saveDeath // set the Save vs. Death value
  END
  PATCH_IF oldSaveWand > saveWand OR (enforce = 1 AND saveWand != 20) BEGIN
    WRITE_BYTE 0x55 saveWand // set the Save vs. Wand value
  END
  PATCH_IF oldSavePolymorph > savePolymorph OR (enforce = 1 AND savePolymorph != 20) BEGIN
    WRITE_BYTE 0x56 savePolymorph // set the Save vs. Polymorph value
  END
  PATCH_IF oldSaveBreath > saveBreath OR (enforce = 1 AND saveBreath != 20) BEGIN
    WRITE_BYTE 0x57 saveBreath // set the Save vs. Breath value
  END
  PATCH_IF oldSaveSpell > saveSpell OR (enforce = 1 AND saveSpell != 20) BEGIN
    WRITE_BYTE 0x58 saveSpell // set the Save vs. Spell value
  END
  PATCH_IF oldResistFire < resistFire OR enforce = 1 BEGIN
    WRITE_BYTE 0x59 resistFire // set new Resist Fire value
    WRITE_BYTE 0x5e resistFire // set new Resist Magic Fire value
  END
  PATCH_IF oldResistCold < resistCold OR enforce = 1 BEGIN
    WRITE_BYTE 0x5a resistCold // set new Resist Cold value
    WRITE_BYTE 0x5f resistCold // set new Resist Magic Cold value
  END
  PATCH_IF oldResistElectricity < resistElectricity OR enforce = 1 BEGIN                                             
    WRITE_BYTE 0x5b resistElectricity // set new Resist Electricity value
  END
  PATCH_IF oldResistAcid < resistAcid OR enforce = 1 BEGIN
    WRITE_BYTE 0x5c resistAcid // set new Resist Acid value
  END
  PATCH_IF oldResistMagic < resistMagic OR enforce = 1 BEGIN
    WRITE_BYTE 0x5d resistMagic // set new Resist Magic value
  END
  PATCH_IF oldResistSlashing < resistSlashing OR enforce = 1 BEGIN
    WRITE_BYTE 0x60 resistSlashing // set new Resist Slashing value
  END
  PATCH_IF oldResistCrushing < resistCrushing OR enforce = 1 BEGIN
    WRITE_BYTE 0x61 resistCrushing // set new Resist Crushing value
  END
  PATCH_IF oldResistPiercing < resistPiercing OR enforce = 1 BEGIN
    WRITE_BYTE 0x62 resistPiercing // set new Resist Piercing value
  END
  PATCH_IF oldResistMissile < resistMissile OR enforce = 1 BEGIN
    WRITE_BYTE 0x63 resistMissile // set new Resist Missiles value
  END
  PATCH_IF oldLevel1 < level1 OR enforce = 1 BEGIN
    WRITE_BYTE 0x234 level1 // set new level (first class) value
  END
  PATCH_IF oldLevel2 < level2 OR enforce = 1 BEGIN
    WRITE_BYTE 0x235 level2 // set new level (second class) value
  END
  PATCH_IF oldLevel3 < level3 OR enforce = 1 BEGIN
    WRITE_BYTE 0x236 level3 // set new level (third class) value
  END
  PATCH_IF sex != 99 AND (oldSex != sex OR enforce = 1) BEGIN
    WRITE_BYTE 0x237 sex // set new Sex value
  END
  PATCH_IF oldStrength < strength OR enforce = 1 BEGIN
    WRITE_BYTE 0x238 strength // set new strength value
  END
  PATCH_IF oldExceptionalStrength < exceptionalStrength OR enforce = 1 BEGIN
    WRITE_BYTE 0x239 exceptionalStrength // set new Exceptional strength value
  END
  PATCH_IF oldIntelligence < intelligence OR enforce = 1 BEGIN
    WRITE_BYTE 0x23a intelligence // set new Intelligence value
  END
  PATCH_IF oldWisdom < wisdom OR enforce = 1 BEGIN
    WRITE_BYTE 0x23b wisdom // set new Wisdom value
  END
  PATCH_IF oldDexterity < dexterity OR enforce = 1 BEGIN
    WRITE_BYTE 0x23c dexterity // set new Dexterity value
  END
  PATCH_IF oldConstitution < constitution OR enforce = 1 BEGIN
    WRITE_BYTE 0x23d constitution // set new Constitution value
  END
  PATCH_IF oldCharisma < charisma OR enforce = 1 BEGIN
    WRITE_BYTE 0x23e charisma // set new Charisma value
  END
  PATCH_IF morale != 99 AND (oldMorale < morale OR enforce = 1) BEGIN
    WRITE_BYTE 0x23f morale // set new morale value
  END
  PATCH_IF moraleBreak != 99 AND (oldMoraleBreak > moraleBreak OR enforce = 1) BEGIN
    WRITE_BYTE 0x240 moraleBreak // set new morale break value
  END
  PATCH_IF moraleRecovery != 99 AND (oldMoraleRecovery > moraleRecovery OR enforce = 1) BEGIN
    WRITE_BYTE 0x242 moraleRecovery // set new morale recovery value
  END
  PATCH_IF allegiance != 999 BEGIN
    WRITE_BYTE 0x270 allegiance // set new Allegiance value
  END
  PATCH_IF general != 999 BEGIN
    WRITE_BYTE 0x271 general // set new general value
  END
  PATCH_IF race != 999 BEGIN
    WRITE_BYTE 0x272 race // set new race value
  END
  PATCH_IF class != 999 BEGIN
    WRITE_BYTE 0x273 class // set new class value
  END
  PATCH_IF gender != 999 BEGIN
    WRITE_BYTE 0x275 gender // set new class value
  END
  PATCH_IF alignment != 99 BEGIN
    WRITE_BYTE 0x27b alignment // set new alignment value
  END
  PATCH_IF hideShadow != 999 AND (oldHideShadow < hideShadow OR enforce = 1) BEGIN
    WRITE_BYTE 0x45 hideShadow // set new Hide in Shadows value
  END
  PATCH_IF moveSilent != 999 AND (oldMoveSilent < moveSilent OR enforce = 1) BEGIN
    WRITE_BYTE 0x68 moveSilent // set new Hide in Shadows value
  END

  PATCH_IF movement != 999 BEGIN // creature movement rate
    LPF DELETE_CRE_EFFECT INT_VAR opcode_to_delete=126 END // Movement Modifier
    LPF DELETE_CRE_EFFECT INT_VAR opcode_to_delete=176 END // Movement Modifier II
    LPF ADD_CRE_EFFECT INT_VAR opcode=176 target=1 timing=9 parameter1=%movement% parameter2=1 END
  END

  PATCH_IF perfect2weapon = 1 BEGIN // perfect two weapon fighting (for creatures with multiple weapons)
    SET_BG2_PROFICIENCY ~PROFICIENCY2WEAPON~ 3
    LPF ADD_CRE_EFFECT INT_VAR opcode=305 target=1 timing=9 parameter1=2 END
  END

  PATCH_IF bump = 1 BEGIN // NPC bump (allows the creature to move others out of its way)
    LPF ADD_CRE_EFFECT INT_VAR opcode=300 target=1 timing=9 parameter2=1 END
  END

  PATCH_IF seeInvisible = 1 BEGIN // See Invisible creatures
    LPF DELETE_CRE_EFFECT INT_VAR opcode_to_delete=193 END
    LPF ADD_CRE_EFFECT INT_VAR opcode=193 target=1 timing=9 parameter2=1 END
  END

  PATCH_IF backstabImmunity = 1 BEGIN // Backstab immunity
    LPF DELETE_CRE_EFFECT INT_VAR opcode_to_delete=292 END
    LPF ADD_CRE_EFFECT INT_VAR opcode=292 target=1 timing=9 parameter2=1 END
  END

  PATCH_IF infravision = 1 BEGIN // Infravision
    LPF DELETE_CRE_EFFECT INT_VAR opcode_to_delete=63 END
    LPF ADD_CRE_EFFECT INT_VAR opcode=63 target=1 timing=9 END
  END

  PATCH_IF blur = 1 BEGIN // Blur
    LPF DELETE_CRE_EFFECT INT_VAR opcode_to_delete=65 END
    LPF ADD_CRE_EFFECT INT_VAR opcode=65 target=1 timing=9 END
  END
END
