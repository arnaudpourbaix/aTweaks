// Creature modification function
// Useful for situations where you don't want to lower a pre-existing value in case it's higher than the one you define
// However, it is possible to enforce the values on CREs that are marked using the enfcXX string variables
// When enforce, will always use specified values even if the existing ones are better

DEFINE_PATCH_FUNCTION ~RR#MDCRE~

INT_VAR
  enforce  = 0                                                                   // values are not enforced by default
  newmove  = 999                                                                 // new movement rate
  newxpv   = 0                                                                   // new XP value
  newhp    = 0                                                                   // new hit point value
  newac    = 99                                                                  // new Armor Class value
  newth    = 99                                                                  // new THAC0 value
  newapr   = 99                                                                  // new number of attacks per round
  newsvd   = 20                                                                  // new Save vs. Death
  newsvw   = 20                                                                  // new Save vs. Wand
  newsvp   = 20                                                                  // new Save vs. Polymorph
  newsvb   = 20                                                                  // new Save vs. Breath
  newsvs   = 20                                                                  // new Save vs. Spell
  newlvl1  = 0                                                                   // new level (first class)
  newlvl2  = 0                                                                   // new level (second)
  newlvl3  = 0                                                                   // new level (third)
  newfr    = 0                                                                   // new Resist Fire value
  newcr    = 0                                                                   // new Resist Cold value
  newer    = 0                                                                   // new Resist Electricity value
  newar    = 0                                                                   // new Resist Acid value
  newmr    = 0                                                                   // new Resist Magic value
  newrs    = 0                                                                   // new Resist Slashing
  newrc    = 0                                                                   // new Resist Crushing
  newrp    = 0                                                                   // new Resist Piercing
  newrm    = 0                                                                   // new Resist Missiles
  newstr   = 0                                                                   // new Strength value
  newstrx  = 0                                                                   // new Exceptional Strength value
  newint   = 0                                                                   // new Intelligence value
  newwis   = 0                                                                   // new Wisdom value
  newdex   = 0                                                                   // new Dexterity value
  newcon   = 0                                                                   // new Constitution value
  newchr   = 0                                                                   // new Charisma value
  newmor   = 99                                                                  // new morale value
  newmorb  = 99                                                                  // new morale break value
  newmorr  = 99                                                                  // new morale recovery value
  newalle  = 999                                                                 // new Allegiance value
  newgen   = 999                                                                 // new general value
  newrace  = 999                                                                 // new race
  newclass = 999                                                                 // new class
  newgendr = 999                                                                 // new gender
  newsex   = 99                                                                  // new sex
  newalign = 99                                                                  // new alignment
  newhide  = 999                                                                 // new Hide in Shadows value
  newmsil  = 999                                                                 // new Move Silently value
  ptwf     = 0                                                                   // perfect two weapon fighting (for creatures with multiple weapons)
  bump     = 0                                                                   // NPC bump (allows the creature to movee others out of its way)
  sinv     = 0                                                                   // See invisible creatures
  bsimm    = 0                                                                   // Backstab immunity
  infra    = 0                                                                   // Infravision
  blur     = 0                                                                   // Blur

STR_VAR
  enfc01   = "RR#NOENF"                                                            // enforced creature 1
  enfc02   = "RR#NOENF"                                                            // enforced creature 2
  enfc03   = "RR#NOENF"                                                            // enforced creature 3
  enfc04   = "RR#NOENF"                                                            // enforced creature 4
  enfc05   = "RR#NOENF"                                                            // enforced creature 5
  enfc06   = "RR#NOENF"                                                            // enforced creature 6
  enfc07   = "RR#NOENF"                                                            // enforced creature 7
  enfc08   = "RR#NOENF"                                                            // enforced creature 8
  enfc09   = "RR#NOENF"                                                            // enforced creature 9
  enfc10   = "RR#NOENF"                                                            // enforced creature 10
  enfc11   = "RR#NOENF"                                                            // enforced creature 11
  enfc12   = "RR#NOENF"                                                            // enforced creature 12
  enfc13   = "RR#NOENF"                                                            // enforced creature 13
  enfc14   = "RR#NOENF"                                                            // enforced creature 14
  enfc15   = "RR#NOENF"                                                            // enforced creature 15
  enfc16   = "RR#NOENF"                                                            // enforced creature 16
  enfc17   = "RR#NOENF"                                                            // enforced creature 17
  enfc18   = "RR#NOENF"                                                            // enforced creature 18
  enfc19   = "RR#NOENF"                                                            // enforced creature 19
  enfc20   = "RR#NOENF"                                                            // enforced creature 20
  enfc21   = "RR#NOENF"                                                            // enforced creature 21
  enfc22   = "RR#NOENF"                                                            // enforced creature 22
  enfc23   = "RR#NOENF"                                                            // enforced creature 23
  enfc24   = "RR#NOENF"                                                            // enforced creature 24
  enfc25   = "RR#NOENF"                                                            // enforced creature 25
  enfc26   = "RR#NOENF"                                                            // enforced creature 26
  enfc27   = "RR#NOENF"                                                            // enforced creature 27
  enfc28   = "RR#NOENF"                                                            // enforced creature 28
  enfc29   = "RR#NOENF"                                                            // enforced creature 29
  enfc30   = "RR#NOENF"                                                            // enforced creature 30
  notenf01 = "RR#XENFD"                                                            // non-enforced creature 1
  notenf02 = "RR#XENFD"                                                            // non-enforced creature 2
  notenf03 = "RR#XENFD"                                                            // non-enforced creature 3
  notenf04 = "RR#XENFD"                                                            // non-enforced creature 4
  notenf05 = "RR#XENFD"                                                            // non-enforced creature 5
  notenf06 = "RR#XENFD"                                                            // non-enforced creature 6
  notenf07 = "RR#XENFD"                                                            // non-enforced creature 7
  notenf08 = "RR#XENFD"                                                            // non-enforced creature 8
  notenf09 = "RR#XENFD"                                                            // non-enforced creature 9
  notenf10 = "RR#XENFD"                                                            // non-enforced creature 10
  enf_regexp = "^$"                                                                // Enforce stats for all matching SOURCE_RES
  notenf_regexp = "^$"                                                             // Do not enforce stats for any matching SOURCE_RES

BEGIN
  READ_LONG  0x14  oldxpv                                                          // XP value
  READ_SHORT 0x24  curhp                                                           // current hit points
  READ_SHORT 0x26  maxhp                                                           // maximum hit points
  READ_SSHORT 0x46 natac                                                          // natural Armor Class
  READ_SSHORT 0x48 effac                                                          // effective Armor Class
  READ_SBYTE  0x52 oldth                                                          // THAC0 value
  READ_SBYTE  0x53 oldapr                                                         // number of attacks per round
  READ_SBYTE  0x54 oldsvd                                                         // Save vs. Death
  READ_SBYTE  0x55 oldsvw                                                         // Save vs. Wand
  READ_SBYTE  0x56 oldsvp                                                         // Save vs. Polymorph
  READ_SBYTE  0x57 oldsvb                                                         // Save vs. Breath
  READ_SBYTE  0x58 oldsvs                                                         // Save vs. Spell
  READ_SBYTE  0x59 oldfr                                                          // Resist Fire value
  READ_SBYTE  0x5a oldcr                                                          // Resist Cold value
  READ_SBYTE  0x5b older                                                          // Resist Electricity value
  READ_SBYTE  0x5c oldar                                                          // Resist Acid value
  READ_SBYTE  0x5d oldmr                                                          // Magic Resistance value
  READ_SBYTE  0x60 oldrs                                                          // Slashing Resistance value
  READ_SBYTE  0x61 oldrc                                                          // Crushing Resistance value
  READ_SBYTE  0x62 oldrp                                                          // Piercing Resistance value
  READ_SBYTE  0x63 oldrm                                                          // Missiles Resistance value
  READ_BYTE  0x234 oldlvl1                                                         // level (first class)
  READ_BYTE  0x235 oldlvl2                                                         // level (second class)
  READ_BYTE  0x236 oldlvl3                                                         // level (third class)
  READ_BYTE  0x237 oldsex                                                          // Sex
  READ_BYTE  0x238 oldstr                                                          // Strength
  READ_BYTE  0x239 oldstrx                                                         // Exceptional Strength
  READ_BYTE  0x23a oldint                                                          // Inteligence
  READ_BYTE  0x23b oldwis                                                          // Wisdom
  READ_BYTE  0x23c olddex                                                          // Dexterity
  READ_BYTE  0x23d oldcon                                                          // Constitution
  READ_BYTE  0x23e oldchr                                                          // Charisma
  READ_BYTE  0x23f oldmor                                                          // morale
  READ_BYTE  0x240 oldmorb                                                         // morale break
  READ_BYTE  0x242 oldmorr                                                         // morale recovery
  READ_BYTE  0x270 oldalle                                                         // Allegiance
  READ_BYTE  0x271 oldgen                                                          // general
  READ_BYTE  0x272 oldrace                                                         // race
  READ_BYTE  0x273 oldclass                                                        // class
  READ_BYTE  0x275 oldgendr                                                        // gender
  READ_BYTE  0x27b oldalign                                                        // alignment
  READ_BYTE  0x45  oldhide                                                         // Hide in Shadows
  READ_BYTE  0x68  oldmsil                                                         // Move Silently

  PATCH_FOR_EACH ~enfcre~ IN ~%enfc01%~ ~%enfc02%~ ~%enfc03%~ ~%enfc04%~ ~%enfc05%~ ~%enfc06%~ ~%enfc07%~ ~%enfc08%~ ~%enfc09%~ ~%enfc10%~ ~%enfc11%~ ~%enfc12%~ ~%enfc13%~ ~%enfc14%~ ~%enfc15%~ ~%enfc16%~ ~%enfc17%~ ~%enfc18%~ ~%enfc19%~ ~%enfc20%~ ~%enfc21%~ ~%enfc22%~ ~%enfc23%~ ~%enfc24%~ ~%enfc25%~ ~%enfc26%~ ~%enfc27%~ ~%enfc28%~ ~%enfc29%~ ~%enfc30%~ BEGIN // checks for enforced creatures
    PATCH_IF "%SOURCE_RES%" STRING_EQUAL_CASE "%enfcre%" BEGIN             
      SET enforce = 1
    END
  END
  PATCH_IF "%SOURCE_RES%" STRING_MATCHES_REGEXP "%enf_regexp%" = 0 BEGIN
    enforce = 1
  END

  PATCH_FOR_EACH ~notenf~ IN ~%notenf01%~ ~%notenf02%~ ~%notenf03%~ ~%notenf04%~ ~%notenf05%~ ~%notenf06%~ ~%notenf07%~ ~%notenf08%~ ~%notenf09%~ ~%notenf10%~ BEGIN // checks for enforced creatures
    PATCH_IF "%SOURCE_RES%" STRING_EQUAL_CASE "%notenf%" BEGIN             
      SET enforce = 0
    END
  END
  PATCH_IF "%SOURCE_RES%" STRING_MATCHES_REGEXP "%notenf_regexp%" = 0 BEGIN
    enforce = 0
  END

  PATCH_IF oldxpv < newxpv OR (enforce = 1 AND newxpv != 0) BEGIN
    WRITE_LONG 0x14 newxpv // set new XP value
  END
  PATCH_IF curhp < newhp OR (enforce = 1 AND newhp != 0) BEGIN
    WRITE_SHORT 0x24 newhp // set current hit points
  END
  PATCH_IF maxhp < newhp OR (enforce = 1 AND newhp != 0) BEGIN
    WRITE_SHORT 0x26 newhp // set maximum hit points
  END
  PATCH_IF natac > newac OR (enforce = 1 AND newac != 99) BEGIN
    WRITE_SHORT 0x46 newac // set natural Armor Class
  END
  PATCH_IF effac > newac OR (enforce = 1 AND newac != 99) BEGIN
    WRITE_SHORT 0x48 newac // set effective Armor Class
  END
  PATCH_IF oldth > newth OR (enforce = 1 AND newth != 99) BEGIN
    WRITE_BYTE 0x52 newth // set new THAC0 value
  END
  PATCH_IF newapr != 99 AND (oldapr < newapr OR enforce = 1) BEGIN
    WRITE_BYTE 0x53 newapr // set new number of attacks per round
  END
  PATCH_IF oldsvd > newsvd OR (enforce = 1 AND newsvd != 20) BEGIN
    WRITE_BYTE 0x54 newsvd // set the Save vs. Death value
  END
  PATCH_IF oldsvw > newsvw OR (enforce = 1 AND newsvw != 20) BEGIN
    WRITE_BYTE 0x55 newsvw // set the Save vs. Wand value
  END
  PATCH_IF oldsvp > newsvp OR (enforce = 1 AND newsvp != 20) BEGIN
    WRITE_BYTE 0x56 newsvp // set the Save vs. Polymorph value
  END
  PATCH_IF oldsvb > newsvb OR (enforce = 1 AND newsvb != 20) BEGIN
    WRITE_BYTE 0x57 newsvb // set the Save vs. Breath value
  END
  PATCH_IF oldsvs > newsvs OR (enforce = 1 AND newsvs != 20) BEGIN
    WRITE_BYTE 0x58 newsvs // set the Save vs. Spell value
  END
  PATCH_IF oldfr < newfr OR enforce = 1 BEGIN
    WRITE_BYTE 0x59 newfr // set new Resist Fire value
    WRITE_BYTE 0x5e newfr // set new Resist Magic Fire value
  END
  PATCH_IF oldcr < newcr OR enforce = 1 BEGIN
    WRITE_BYTE 0x5a newcr // set new Resist Cold value
    WRITE_BYTE 0x5f newcr // set new Resist Magic Cold value
  END
  PATCH_IF older < newer OR enforce = 1 BEGIN                                             
    WRITE_BYTE 0x5b newer // set new Resist Electricity value
  END
  PATCH_IF oldar < newar OR enforce = 1 BEGIN
    WRITE_BYTE 0x5c newar // set new Resist Acid value
  END
  PATCH_IF oldmr < newmr OR enforce = 1 BEGIN
    WRITE_BYTE 0x5d newmr // set new Resist Magic value
  END
  PATCH_IF oldrs < newrs OR enforce = 1 BEGIN
    WRITE_BYTE 0x60 newrs // set new Resist Slashing value
  END
  PATCH_IF oldrc < newrc OR enforce = 1 BEGIN
    WRITE_BYTE 0x61 newrc // set new Resist Crushing value
  END
  PATCH_IF oldrp < newrp OR enforce = 1 BEGIN
    WRITE_BYTE 0x62 newrp // set new Resist Piercing value
  END
  PATCH_IF oldrm < newrm OR enforce = 1 BEGIN
    WRITE_BYTE 0x63 newrm // set new Resist Missiles value
  END
  PATCH_IF oldlvl1 < newlvl1 OR enforce = 1 BEGIN
    WRITE_BYTE 0x234 newlvl1 // set new level (first class) value
  END
  PATCH_IF oldlvl2 < newlvl2 OR enforce = 1 BEGIN
    WRITE_BYTE 0x235 newlvl2 // set new level (second class) value
  END
  PATCH_IF oldlvl3 < newlvl3 OR enforce = 1 BEGIN
    WRITE_BYTE 0x236 newlvl3 // set new level (third class) value
  END
  PATCH_IF newsex != 99 AND (oldsex != newsex OR enforce = 1) BEGIN
    WRITE_BYTE 0x237 newsex // set new Sex value
  END
  PATCH_IF oldstr < newstr OR enforce = 1 BEGIN
    WRITE_BYTE 0x238 newstr // set new Strength value
  END
  PATCH_IF oldstrx < newstrx OR enforce = 1 BEGIN
    WRITE_BYTE 0x239 newstrx // set new Exceptional Strength value
  END
  PATCH_IF oldint < newint OR enforce = 1 BEGIN
    WRITE_BYTE 0x23a newint // set new Intelligence value
  END
  PATCH_IF oldwis < newwis OR enforce = 1 BEGIN
    WRITE_BYTE 0x23b newwis // set new Wisdom value
  END
  PATCH_IF olddex < newdex OR enforce = 1 BEGIN
    WRITE_BYTE 0x23c newdex // set new Dexterity value
  END
  PATCH_IF oldcon < newcon OR enforce = 1 BEGIN
    WRITE_BYTE 0x23d newcon // set new Constitution value
  END
  PATCH_IF oldchr < newchr OR enforce = 1 BEGIN
    WRITE_BYTE 0x23e newchr // set new Charisma value
  END
  PATCH_IF newmor != 99 AND (oldmor < newmor OR enforce = 1) BEGIN
    WRITE_BYTE 0x23f newmor // set new morale value
  END
  PATCH_IF newmorb != 99 AND (oldmorb > newmorb OR enforce = 1) BEGIN
    WRITE_BYTE 0x240 newmorb // set new morale break value
  END
  PATCH_IF newmorr != 99 AND (oldmorr > newmorr OR enforce = 1) BEGIN
    WRITE_BYTE 0x242 newmorr // set new morale recovery value
  END
  PATCH_IF newalle != 999 BEGIN
    WRITE_BYTE 0x270 newalle // set new Allegiance value
  END
  PATCH_IF newgen != 999 BEGIN
    WRITE_BYTE 0x271 newgen // set new general value
  END
  PATCH_IF newrace != 999 BEGIN
    WRITE_BYTE 0x272 newrace // set new race value
  END
  PATCH_IF newclass != 999 BEGIN
    WRITE_BYTE 0x273 newclass // set new class value
  END
  PATCH_IF newgendr != 999 BEGIN
    WRITE_BYTE 0x275 newgendr // set new class value
  END
  PATCH_IF newalign != 99 BEGIN
    WRITE_BYTE 0x27b newalign // set new alignment value
  END
  PATCH_IF newhide != 999 AND (oldhide < newhide OR enforce = 1) BEGIN
    WRITE_BYTE 0x45 newhide // set new Hide in Shadows value
  END
  PATCH_IF newmsil != 999 AND (oldmsil < newmsil OR enforce = 1) BEGIN
    WRITE_BYTE 0x68 newmsil // set new Hide in Shadows value
  END

  PATCH_IF newmove != 999 BEGIN // creature movement rate
    LPF DELETE_CRE_EFFECT INT_VAR opcode_to_delete = "126" END // Movement Modifier
    LPF DELETE_CRE_EFFECT INT_VAR opcode_to_delete = "176" END // Movement Modifier II
    LPF ADD_CRE_EFFECT INT_VAR opcode=176 target=1 timing=9 parameter1=%newmove% parameter2=1 END
  END

  PATCH_IF ptwf = 1 BEGIN // perfect two weapon fighting (for creatures with multiple weapons)
    SET_BG2_PROFICIENCY ~PROFICIENCY2WEAPON~ 3
    LPF ADD_CRE_EFFECT INT_VAR opcode=305 target=1 timing=9 parameter1=2 END
  END

  PATCH_IF bump = 1 BEGIN // NPC bump (allows the creature to move others out of its way)
    LPF ADD_CRE_EFFECT INT_VAR opcode=300 target=1 timing=9 parameter2=1 END
  END

  PATCH_IF sinv = 1 BEGIN // See Invisible creatures
    LPF DELETE_CRE_EFFECT INT_VAR opcode_to_delete=193 END
    LPF ADD_CRE_EFFECT INT_VAR opcode=193 target=1 timing=9 parameter2=1 END
  END

  PATCH_IF bsimm = 1 BEGIN // Backstab immunity
    LPF DELETE_CRE_EFFECT INT_VAR opcode_to_delete=292 END
    LPF ADD_CRE_EFFECT INT_VAR opcode=292 target=1 timing=9 parameter2=1 END
  END

  PATCH_IF infra = 1 BEGIN // Infravision
    LPF DELETE_CRE_EFFECT INT_VAR opcode_to_delete=63 END
    LPF ADD_CRE_EFFECT INT_VAR opcode=63 target=1 timing=9 END
  END

  PATCH_IF blur = 1 BEGIN // Blur
    LPF DELETE_CRE_EFFECT INT_VAR opcode_to_delete=65 END
    LPF ADD_CRE_EFFECT INT_VAR opcode=65 target=1 timing=9 END
  END
END
