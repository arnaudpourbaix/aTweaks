
COPY_EXISTING ~SPCL311.SPL~ ~override~                                             // Charm Animal ranger ability
			  ~nmrnwr1.spl~ ~override~											   // Enhanced Charm Animal Wilderness Runner ability Divine Remix
  READ_LONG  0x64 "abil_off"
  READ_SHORT 0x68 "abil_num"
  READ_LONG  0x6a "fx_off"
  SET "new_abil" = 0
  FOR (index = 0 ; index < abil_num ; index = index + 1) BEGIN                     // Note: coding approach based on the G3 BG2 Fixpack
    READ_SHORT  ("%abil_off%" + 0x10 + (0x28 * "%index%")) "min_lev"
    PATCH_IF ("%min_lev%" = 1) BEGIN // if first header
      READ_SHORT ("%abil_off%" + 0x1e + (0x28 * "%index%")) "abil_fx_num"
      READ_SHORT ("%abil_off%" + 0x20 + (0x28 * "%index%")) "abil_fx_idx"
      FOR (index2 = 0 ; index2 < abil_fx_num ; index2 = index2 + 1) BEGIN
        READ_BYTE   ("%fx_off%" + 0x0C + (0x30 * ("%abil_fx_idx%" + "%index2%"))) "timing"  // timing mode
        PATCH_IF ("%timing%" = 0) BEGIN // if the timing mode is set to 0 (duration)
          WRITE_LONG  ("%fx_off%" + 0x0e + (0x30 * ("%abil_fx_idx%" + "%index2%"))) 30 // set initial duration to 5 rounds)
        END
        WRITE_LONG  ("%fx_off%" + 0x24 + (0x30 * ("%abil_fx_idx%" + "%index2%"))) "8"  // save type (change it to vs. wand/staff/rod)
        WRITE_LONG  ("%fx_off%" + 0x28 + (0x30 * ("%abil_fx_idx%" + "%index2%"))) "-1" // save bonus (-1 at first level)
        WRITE_BYTE  ("%fx_off%" + 0x0d + (0x30 * ("%abil_fx_idx%" + "%index2%"))) 0    // flag all effects in this ability as non-magical
        WRITE_BYTE  ("%fx_off%" + 0x03 + (0x30 * ("%abil_fx_idx%" + "%index2%"))) 0    // power (set to 0 as this is a innate, non-magical ability)
        WRITE_SHORT ("%abil_off%" + 0x12 + ("%index%" * 0x28)) 0                       // casting time (set to 0 as this is an innate, non-magical ability)
      END
    END
    READ_SHORT ("%abil_off%" + 0x10 + (("%abil_num%" - 1) * 0x28)) "min_level" // min level of last ability header
    FOR (index = min_level + 1 ; index < 21 ; index = index + 1) BEGIN
      READ_ASCII ("%abil_off%" +        (("%abil_num%" - 1) * 0x28)) "abil_clone" (0x28) // reads last ability as block
      READ_SHORT ("%abil_off%" + 0x1e + (("%abil_num%" - 1) * 0x28)) "abil_fx_num" // reads number of fx from last ability
      READ_SHORT ("%abil_off%" + 0x20 + (("%abil_num%" - 1) * 0x28)) "abil_fx_idx" // reads index of last effects from last ability
      // create effects for next level based off previous level effects
      FOR (index2 = 0 ; index2 < abil_fx_num ; index2 = index2 + 1) BEGIN
        READ_ASCII ("%fx_off%" +        (("%abil_fx_idx%" + "%index2%") * 0x30)) "clone_fx" (0x30) // reads entire effect
        READ_LONG  ("%fx_off%" + 0x28 + (("%abil_fx_idx%" + "%index2%") * 0x30)) "savebonus"       // saving throw bonus
        READ_LONG  ("%fx_off%" + 0x0e + (("%abil_fx_idx%" + "%index2%") * 0x30)) "duration"        // duration
        READ_BYTE  ("%fx_off%" + 0x0c + (("%abil_fx_idx%" + "%index2%") * 0x30)) "timing"          // timing mode
        INSERT_BYTES ("%fx_off%" +        (("%abil_fx_idx%" + "%abil_fx_num%" + "%index2%") * 0x30)) 0x30
        WRITE_EVALUATED_ASCII ("%fx_off%" +        (("%abil_fx_idx%" + "%abil_fx_num%" + "%index2%") * 0x30)) "%clone_fx%" // clones effect
        PATCH_IF ("%index%" = "4" OR "%index%" = "7" OR "%index%" = "10" OR "%index%" = "13" OR "%index%" = "16") BEGIN // adjust the saving throw penalty every 3 levels up to level 16
          WRITE_LONG  ("%fx_off%" + 0x28 + (("%abil_fx_idx%" + "%abil_fx_num%" + "%index2%") * 0x30)) ("%savebonus%" - 1) // increase the saving throw penalty by -1 
        END
        PATCH_IF ("%timing%" = 0) BEGIN // as long as the timing mode is 0
          WRITE_LONG  ("%fx_off%" + 0x0e + (("%abil_fx_idx%" + "%abil_fx_num%" + "%index2%") * 0x30)) ("%duration%" + 30) // increase the duration by 5 rounds
        END
      END
      // effects created, now add new ability
      INSERT_BYTES            ("%abil_off%" +        ("%abil_num%" * 0x28)) 0x28
      WRITE_EVALUATED_ASCII ("%abil_off%" +        ("%abil_num%" * 0x28)) "%abil_clone%" // clones last ability
      WRITE_SHORT           ("%abil_off%" + 0x10 + ("%abil_num%" * 0x28)) "%index%"      // min level
      WRITE_SHORT           ("%abil_off%" + 0x20 + ("%abil_num%" * 0x28)) ("%abil_fx_num%" + "%abil_fx_idx%") // corrects fx index
      SET "fx_off" = ("%fx_off%" + 0x28)
      SET "abil_num" = "%abil_num%" + 1
    END
    WRITE_SHORT 0x68 "%abil_num%"
    WRITE_LONG  0x6a "%fx_off%"
  END
PATCH_IF GAME_IS ~iwdee~ BEGIN
  LPF ALTER_EFFECT INT_VAR check_globals = 0 match_opcode = 324 savingthrow = 0 savebonus = 0 duration = 1 END
END
BUT_ONLY_IF_IT_CHANGES IF_EXISTS

COPY_EXISTING ~SPCL311.SPL~ ~override~                                             // Charm Animal ranger ability
  SAY NAME1 @126 SAY NAME2 @126 SAY UNIDENTIFIED_DESC @126 SAY DESC @126           // Animal Empathy
BUT_ONLY_IF_IT_CHANGES
